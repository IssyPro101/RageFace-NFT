{"ast":null,"code":"var _jsxFileName = \"/Users/israeladelaja/Desktop/Product DApp/client/src/ListProducts.js\";\nimport React, { Component } from 'react';\nimport ProductBuyContract from \"./contracts/ProductBuy.json\";\nimport TestToken from \"./contracts/TestToken.json\";\nimport Navbar from \"./Navbar.js\";\nimport getWeb3 from \"./getWeb3\";\nimport \"./App.css\";\n\nclass ListProducts extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      products: null,\n      web3: null,\n      account: \"\",\n      contract: null,\n      token: null,\n      tokenName: null,\n      approved: false,\n      product: null,\n      statuses: null,\n      taxTolerance: null\n    };\n\n    this.componentDidMount = async () => {\n      try {\n        // Get network provider and web3 instance.\n        const web3 = await getWeb3();\n        const account = await window.ethereum.request({\n          method: 'eth_accounts'\n        });\n        console.log(account[0]); // Get the contract instance.\n\n        const networkId = await web3.eth.net.getId();\n        const deployedNetworkProduct = ProductBuyContract.networks[networkId];\n        const instance = new web3.eth.Contract(ProductBuyContract.abi, deployedNetworkProduct && deployedNetworkProduct.address);\n        let tokenAddress = await instance.methods.token().call();\n        const deployedNetworkToken = TestToken.networks[networkId];\n        const token = new web3.eth.Contract(TestToken.abi, deployedNetworkToken && deployedNetworkToken.address);\n        let product = deployedNetworkProduct.address;\n        let products = await instance.methods.viewProducts().call();\n        let tokenName = await token.methods.name().call();\n        let tokenSymbol = await token.methods.symbol().call();\n        let taxTolerance = await instance.methods.taxTolerance().call(); // Set web3, accounts, and contract to the state, and then proceed with an\n        // example of interacting with the contract's methods.\n\n        this.setState({\n          web3,\n          account: account[0],\n          contract: instance,\n          products,\n          token,\n          tokenName,\n          tokenSymbol,\n          product,\n          taxTolerance\n        });\n      } catch (error) {\n        // Catch any errors for any of the above operations.\n        alert(\"Failed to load web3, accounts, or contract. Check console for details.\");\n        console.error(error);\n      }\n    };\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      let name = document.getElementsByName(\"field1\")[0].value;\n      let link = document.getElementsByName(\"field2\")[0].value;\n      let price = document.getElementsByName(\"field3\")[0].value;\n      await this.state.contract.methods.listProduct(name, link, price).send({\n        from: this.state.account\n      });\n    };\n\n    this.handlePrice = async event => {\n      if (this.state.taxTolerance !== 0) {\n        let priceWithTax = document.getElementsByName(\"field3\")[0].value * this.state.taxTolerance / 100;\n        console.log(priceWithTax);\n        this.setState({\n          priceWithTax\n        });\n      } else {\n        this.setState({\n          priceWithTax: document.getElementsByName(\"field3\")[0].value\n        });\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      account: this.state.account,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"List a Product\"), React.createElement(\"div\", {\n      class: \"form-style-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Product Details\"), React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"field1\",\n      placeholder: \"Product Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"field2\",\n      placeholder: \"Product Link\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      onChange: this.handlePrice,\n      type: \"text\",\n      name: \"field3\",\n      placeholder: \"Product Price \" + \"in \" + this.state.tokenName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"You will receive \", this.state.priceWithTax, \" (\", this.state.taxTolerance % \"tax on token transfer\", \")\"), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"List\",\n      onClick: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default ListProducts;","map":{"version":3,"sources":["/Users/israeladelaja/Desktop/Product DApp/client/src/ListProducts.js"],"names":["React","Component","ProductBuyContract","TestToken","Navbar","getWeb3","ListProducts","state","products","web3","account","contract","token","tokenName","approved","product","statuses","taxTolerance","componentDidMount","window","ethereum","request","method","console","log","networkId","eth","net","getId","deployedNetworkProduct","networks","instance","Contract","abi","address","tokenAddress","methods","call","deployedNetworkToken","viewProducts","name","tokenSymbol","symbol","setState","error","alert","handleSubmit","event","preventDefault","document","getElementsByName","value","link","price","listProduct","send","from","handlePrice","priceWithTax","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport ProductBuyContract from \"./contracts/ProductBuy.json\";\nimport TestToken from \"./contracts/TestToken.json\";\nimport Navbar from \"./Navbar.js\";\nimport getWeb3 from \"./getWeb3\";\nimport \"./App.css\";\n\nclass ListProducts extends Component {\n\n    state = {products: null, web3: null, account: \"\", contract: null, token: null, tokenName: null, approved: false, product: null, statuses: null, taxTolerance: null}\n\n    componentDidMount = async () => {\n        try {\n          // Get network provider and web3 instance.\n            const web3 = await getWeb3();\n\n            const account = await window.ethereum.request({ method: 'eth_accounts' });\n            console.log(account[0])\n\n            // Get the contract instance.\n            const networkId = await web3.eth.net.getId();\n            const deployedNetworkProduct = ProductBuyContract.networks[networkId];\n            const instance = new web3.eth.Contract(\n                ProductBuyContract.abi,\n                deployedNetworkProduct && deployedNetworkProduct.address,\n            );\n\n            let tokenAddress = await instance.methods.token().call();\n\n            const deployedNetworkToken = TestToken.networks[networkId];\n            const token = new web3.eth.Contract(\n                TestToken.abi,\n                deployedNetworkToken && deployedNetworkToken.address,\n            );\n\n            let product = deployedNetworkProduct.address;\n\n            let products = await instance.methods.viewProducts().call();\n\n            let tokenName = await token.methods.name().call();\n\n            let tokenSymbol = await token.methods.symbol().call();\n\n            let taxTolerance = await instance.methods.taxTolerance().call();\n\n\n          // Set web3, accounts, and contract to the state, and then proceed with an\n          // example of interacting with the contract's methods.\n          this.setState({web3, account: account[0], contract: instance, products, token, tokenName, tokenSymbol, product, taxTolerance });\n    \n        } catch (error) {\n          // Catch any errors for any of the above operations.\n          alert(\n            `Failed to load web3, accounts, or contract. Check console for details.`,\n          );\n          console.error(error);\n        }\n    };    \n\n    handleSubmit = async (event) => {\n        event.preventDefault();\n        let name = document.getElementsByName(\"field1\")[0].value;\n        let link = document.getElementsByName(\"field2\")[0].value;\n        let price = document.getElementsByName(\"field3\")[0].value;\n\n        await this.state.contract.methods.listProduct(name, link, price).send({from: this.state.account});\n    }\n\n    handlePrice = async (event) => {\n        if (this.state.taxTolerance !== 0) {\n            let priceWithTax = document.getElementsByName(\"field3\")[0].value * this.state.taxTolerance / 100;\n            console.log(priceWithTax);\n            this.setState({priceWithTax})\n        } else {\n            this.setState({priceWithTax: document.getElementsByName(\"field3\")[0].value})\n        }\n\n    }\n\n\n  render() {\n    return (\n        <div className=\"App\">\n            <Navbar account={this.state.account}/>\n            <h1>List a Product</h1>\n            <div class=\"form-style-6\">\n                <h1>Product Details</h1>\n                <form>\n                    <input type=\"text\" name=\"field1\" placeholder=\"Product Name\" />\n                    <input type=\"text\" name=\"field2\" placeholder=\"Product Link\" />\n                    <input onChange={this.handlePrice} type=\"text\" name=\"field3\" placeholder={\"Product Price \" + \"in \" + this.state.tokenName}></input>\n                    <p>You will receive {this.state.priceWithTax} ({this.state.taxTolerance% \"tax on token transfer\"})</p>\n                    <input type=\"submit\" value=\"List\" onClick={this.handleSubmit} />\n\n                </form>\n            </div>\n        </div>\n    );\n  }\n}\n\nexport default ListProducts;\n"]},"metadata":{},"sourceType":"module"}