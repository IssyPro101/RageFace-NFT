{"ast":null,"code":"var _jsxFileName = \"/Users/israeladelaja/Desktop/Product DApp/client/src/Main.js\";\nimport React, { Component } from \"react\";\nimport ProductBuyContract from \"./contracts/ProductBuy.json\";\nimport TestToken from \"./contracts/TestToken.json\";\nimport getWeb3 from \"./getWeb3\";\nimport \"./App.css\";\n\nclass Main extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      products: null,\n      web3: null,\n      account: null,\n      contract: null,\n      token: null,\n      tokenName: null,\n      approved: false,\n      product: null,\n      statuses: null,\n      decimals: null,\n      balance: null\n    };\n\n    this.componentDidMount = async () => {\n      try {\n        // Get network provider and web3 instance.\n        const web3 = await getWeb3(); // Use web3 to get the user's accounts.\n\n        const account = await window.ethereum.request({\n          method: 'eth_accounts'\n        });\n        console.log(account[0]); // Get the contract instance.\n\n        const networkId = await web3.eth.net.getId();\n        const deployedNetworkProduct = ProductBuyContract.networks[networkId];\n        const instance = new web3.eth.Contract(ProductBuyContract.abi, deployedNetworkProduct && deployedNetworkProduct.address);\n        let tokenAddress = await instance.methods.token().call();\n        const deployedNetworkToken = TestToken.networks[networkId];\n        const token = new web3.eth.Contract(TestToken.abi, deployedNetworkToken && tokenAddress);\n        let product = deployedNetworkProduct.address;\n        let products = await instance.methods.viewProducts().call();\n        let tokenName = await token.methods.name().call();\n        let tokenSymbol = await token.methods.symbol().call();\n        let decimals = await token.methods.decimals().call();\n        let balance = await token.methods.balanceOf(account[0]).call();\n        let statuses = await instance.methods.getProductStatuses().call();\n        console.log(statuses); // Set web3, accounts, and contract to the state, and then proceed with an\n        // example of interacting with the contract's methods.\n\n        this.setState({\n          web3,\n          account: account[0],\n          contract: instance,\n          products,\n          token,\n          tokenName,\n          tokenSymbol,\n          product,\n          statuses,\n          decimals,\n          balance\n        });\n      } catch (error) {\n        // Catch any errors for any of the above operations.\n        alert(\"Failed to load web3, accounts, or contract. Check console for details.\");\n        console.error(error);\n      }\n    };\n\n    this.handleApprove = async price => {\n      let receipt = await this.state.token.methods.approve(this.state.product, price).send({\n        from: this.state.account\n      });\n      console.log(receipt);\n      this.setState({\n        approved: true\n      });\n    };\n\n    this.handleBuy = async id => {\n      await this.state.contract.methods.buyProduct(id).send({\n        from: this.state.account\n      });\n      await this.getProductStatuses();\n    };\n\n    this.getProductStatuses = async () => {\n      let statuses = await this.state.contract.methods.getProductStatuses().call();\n      this.setState({\n        statuses\n      });\n    };\n  }\n\n  render() {\n    let content;\n\n    if (!this.state.web3) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"Loading Web3, accounts, and contracts...\");\n    } else if (this.state.products.length === 0) {\n      content = React.createElement(\"h3\", {\n        id: \"no-products\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"No products have been listed yet.\");\n    } else {\n      content = this.state.products.map((product, key) => {\n        let status = this.state.statuses[key];\n\n        if (status == 0) {\n          let stat = !this.state.approved ? React.createElement(\"button\", {\n            onClick: () => this.handleApprove(product.productPrice),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 92\n            },\n            __self: this\n          }, \"Approve Contract\") : React.createElement(\"button\", {\n            onClick: () => this.handleBuy(product.productId),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 92\n            },\n            __self: this\n          }, \"Buy\");\n        } else {\n          let stat = React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 94\n            },\n            __self: this\n          });\n        }\n\n        return React.createElement(\"div\", {\n          className: \"product\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }, React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, product.productName), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }, \"Price: \", product.productPrice / 10 ** this.state.decimals, \" \", this.state.tokenSymbol), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }, \"Id: \", product.productId), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }, \"Seller: \", product.productSeller), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        }, \"Status: \", status === 1 ? \"Sold\" : \"Unsold\"));\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Product Marketplace\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"Your \", this.state.tokenName, \" balance: \", this.state.balance / 10 ** this.state.decimals), React.createElement(\"div\", {\n      id: \"products\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, content));\n  }\n\n}\n\nexport default Main;","map":{"version":3,"sources":["/Users/israeladelaja/Desktop/Product DApp/client/src/Main.js"],"names":["React","Component","ProductBuyContract","TestToken","getWeb3","Main","state","products","web3","account","contract","token","tokenName","approved","product","statuses","decimals","balance","componentDidMount","window","ethereum","request","method","console","log","networkId","eth","net","getId","deployedNetworkProduct","networks","instance","Contract","abi","address","tokenAddress","methods","call","deployedNetworkToken","viewProducts","name","tokenSymbol","symbol","balanceOf","getProductStatuses","setState","error","alert","handleApprove","price","receipt","approve","send","from","handleBuy","id","buyProduct","render","content","length","map","key","status","stat","productPrice","productId","productName","productSeller"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport ProductBuyContract from \"./contracts/ProductBuy.json\";\nimport TestToken from \"./contracts/TestToken.json\";\nimport getWeb3 from \"./getWeb3\";\n\nimport \"./App.css\";\n\n\nclass Main extends Component {\n\n  state = { products: null, web3: null, account: null, contract: null, token: null, tokenName: null, approved: false, product: null, statuses: null, decimals: null, balance: null };\n\n  componentDidMount = async () => {\n    try {\n      // Get network provider and web3 instance.\n      const web3 = await getWeb3();\n\n      // Use web3 to get the user's accounts.\n      const account = await window.ethereum.request({ method: 'eth_accounts' });\n      console.log(account[0])\n\n      // Get the contract instance.\n      const networkId = await web3.eth.net.getId();\n      const deployedNetworkProduct = ProductBuyContract.networks[networkId];\n      const instance = new web3.eth.Contract(\n        ProductBuyContract.abi,\n        deployedNetworkProduct && deployedNetworkProduct.address,\n      );\n\n      let tokenAddress = await instance.methods.token().call();\n\n      const deployedNetworkToken = TestToken.networks[networkId];\n      const token = new web3.eth.Contract(\n        TestToken.abi,\n        deployedNetworkToken && tokenAddress,\n      );\n\n      let product = deployedNetworkProduct.address;\n\n      let products = await instance.methods.viewProducts().call();\n\n      let tokenName = await token.methods.name().call();\n\n      let tokenSymbol = await token.methods.symbol().call();\n\n      let decimals = await token.methods.decimals().call();\n\n      let balance = await token.methods.balanceOf(account[0]).call();\n\n      let statuses = await instance.methods.getProductStatuses().call();\n      console.log(statuses)\n\n      // Set web3, accounts, and contract to the state, and then proceed with an\n      // example of interacting with the contract's methods.\n      this.setState({ web3, account: account[0], contract: instance, products, token,tokenName, tokenSymbol, product, statuses, decimals, balance });\n\n    } catch (error) {\n      // Catch any errors for any of the above operations.\n      alert(\n        `Failed to load web3, accounts, or contract. Check console for details.`,\n      );\n      console.error(error);\n    }\n  };\n\n  handleApprove = async (price) => {\n    let receipt = await this.state.token.methods.approve(this.state.product, price).send({from: this.state.account});\n    console.log(receipt)\n    this.setState({approved: true})\n  }\n\n  handleBuy = async (id) => {\n    await this.state.contract.methods.buyProduct(id).send({from: this.state.account});\n    await this.getProductStatuses();\n  }\n\n  getProductStatuses = async () => {\n    let statuses = await this.state.contract.methods.getProductStatuses().call();\n    this.setState({statuses});\n  }\n  \n  render() {\n    let content;\n    if (!this.state.web3) {\n      return <div>Loading Web3, accounts, and contracts...</div>;\n    } else if (this.state.products.length === 0) {\n      content = <h3 id=\"no-products\">No products have been listed yet.</h3>\n    } else {\n      content = this.state.products.map((product, key) => {\n        let status = this.state.statuses[key]\n        if (status == 0) {\n          let stat = !this.state.approved ? <button onClick={() => this.handleApprove(product.productPrice)}>Approve Contract</button> : <button onClick={() => this.handleBuy(product.productId)}>Buy</button>\n        } else {\n          let stat = <p></p>\n        }\n       \n        return ( \n          <div className=\"product\">\n            <h2>{product.productName}</h2>\n            <p>Price: {product.productPrice/10**this.state.decimals} {this.state.tokenSymbol}</p>\n            <p>Id: {product.productId}</p>\n            <p>Seller: {product.productSeller}</p>\n            <p>Status: {status === 1 ? \"Sold\" : \"Unsold\"}</p>\n  \n          </div>\n        )    \n      })\n    }\n    return (\n      <div className=\"App\">\n        <h1>Product Marketplace</h1>\n        <p>Your {this.state.tokenName} balance: {this.state.balance/10**this.state.decimals}</p>\n        <div id=\"products\">\n          {content}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}