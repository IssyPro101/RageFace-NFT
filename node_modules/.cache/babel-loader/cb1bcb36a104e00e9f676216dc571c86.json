{"ast":null,"code":"'use strict';\n\nconst _require = require('multiaddr'),\n      Multiaddr = _require.Multiaddr;\n\nconst configure = require('../lib/configure');\n\nconst toUrlSearchParams = require('../lib/to-url-search-params');\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/swarm').API<HTTPClientExtraOptions>} SwarmAPI\n */\n\n\nmodule.exports = configure(api => {\n  /**\n   * @type {SwarmAPI[\"addrs\"]}\n   */\n  async function addrs(options = {}) {\n    const res = await api.post('swarm/addrs', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    });\n    /** @type {{ Addrs: Record<string, string[]> }} */\n\n    const _ref = await res.json(),\n          Addrs = _ref.Addrs;\n\n    return Object.keys(Addrs).map(id => ({\n      id,\n      addrs: (Addrs[id] || []).map(a => new Multiaddr(a))\n    }));\n  }\n\n  return addrs;\n});","map":null,"metadata":{},"sourceType":"script"}