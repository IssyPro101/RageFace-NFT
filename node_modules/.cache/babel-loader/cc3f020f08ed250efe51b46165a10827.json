{"ast":null,"code":"'use strict';\n\nconst _require = require('multiformats/cid'),\n      CID = _require.CID;\n\nconst toCamel = require('../lib/object-to-camel');\n\nconst configure = require('../lib/configure');\n\nconst toUrlSearchParams = require('../lib/to-url-search-params');\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/refs').API<HTTPClientExtraOptions>} RefsAPI\n */\n\n\nmodule.exports = configure((api, opts) => {\n  /**\n   * @type {RefsAPI[\"refs\"]}\n   */\n  const refs = async function* (args, options = {}) {\n    /** @type {import('ipfs-core-types/src/utils').IPFSPath[]} */\n    const argsArr = Array.isArray(args) ? args : [args];\n    const res = await api.post('refs', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: argsArr.map(arg => \"\".concat(arg instanceof Uint8Array ? CID.decode(arg) : arg)),\n        ...options\n      }),\n      headers: options.headers,\n      transform: toCamel\n    });\n    yield* res.ndjson();\n  };\n\n  return Object.assign(refs, {\n    local: require('./local')(opts)\n  });\n});","map":null,"metadata":{},"sourceType":"script"}