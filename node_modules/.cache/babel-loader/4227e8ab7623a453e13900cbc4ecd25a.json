{"ast":null,"code":"import _regeneratorRuntime from\"/Users/israeladelaja/Desktop/NFTAirdrop/client/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/israeladelaja/Desktop/NFTAirdrop/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/Users/israeladelaja/Desktop/NFTAirdrop/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/israeladelaja/Desktop/NFTAirdrop/client/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/israeladelaja/Desktop/NFTAirdrop/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/israeladelaja/Desktop/NFTAirdrop/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/israeladelaja/Desktop/NFTAirdrop/client/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from\"react\";import\"./App.css\";var MyNFTs=/*#__PURE__*/function(_Component){_inherits(MyNFTs,_Component);function MyNFTs(){var _getPrototypeOf2;var _this;_classCallCheck(this,MyNFTs);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(MyNFTs)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={};_this.componentDidMount=/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:case\"end\":return _context.stop();}}},_callee);}));_this.claimNFTBought=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(tokenId){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return _this.props.airdropInstance.methods.claimNFTBought(tokenId).send({from:_this.props.account});case 2:window.location.reload();case 3:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x){return _ref2.apply(this,arguments);};}();return _this;}_createClass(MyNFTs,[{key:\"render\",value:function render(){var _this2=this;return React.createElement(\"div\",{className:\"App\"},React.createElement(\"h1\",null,\"My NFTs\"),React.createElement(\"p\",{class:\"nft-info\"},\"The NFTs bought from the sale can be claimed at: \",this.props.airdropEnd,\". The NFTs bought from Airdrop are already claimed!\"),React.createElement(\"div\",{class:\"nfts\"},this.props.nfts.map(function(nft,key){if(nft.owner.toLowerCase()===_this2.props.account.toLowerCase()){if(nft.purpose===\"1\"){return React.createElement(\"div\",{class:\"nft\"},React.createElement(\"div\",{class:\"white-box\"},React.createElement(\"h2\",null,nft.title),React.createElement(\"p\",{class:\"nft-info\"},\"Can claim at end of sale\"),React.createElement(\"p\",{class:\"nft-info\"},\"Id: #\",nft.id),React.createElement(\"img\",{class:\"ipfs-image\",src:\"https://ipfs.infura.io/ipfs/\".concat(nft.image),alt:\"IPFS Upload\"}),React.createElement(\"p\",{class:\"nft-info\",id:\"desc\"},\"A cool cryptopunk\"),React.createElement(\"p\",{class:\"nft-info\"},nft.claimed===\"1\"?React.createElement(\"button\",{class:\"purchase\",disabled:true},\"Claimed\"):React.createElement(\"button\",{class:\"purchase\",onClick:function onClick(){return _this2.claimNFTBought(nft.id);}},\"Claim\"))));}else if(nft.purpose===\"0\"){return React.createElement(\"div\",{class:\"nft\"},React.createElement(\"div\",{class:\"white-box\"},React.createElement(\"h2\",null,nft.title),React.createElement(\"p\",{class:\"nft-info\"},\"Received from Airdrop\"),React.createElement(\"h3\",{class:\"nft-info\"},\"Id: #\",nft.id),React.createElement(\"img\",{class:\"ipfs-image\",src:\"https://ipfs.infura.io/ipfs/\".concat(nft.image),alt:\"IPFS Upload\"}),React.createElement(\"p\",{class:\"nft-info\",id:\"desc\"},\"A cool cryptopunk\"),React.createElement(\"button\",{class:\"purchase-disabled\",disabled:true},\"Claimed\")));}}return\"\";})));}}]);return MyNFTs;}(Component);export default MyNFTs;","map":{"version":3,"sources":["/Users/israeladelaja/Desktop/NFTAirdrop/client/src/MyNFTs.js"],"names":["React","Component","MyNFTs","state","componentDidMount","claimNFTBought","tokenId","props","airdropInstance","methods","send","from","account","window","location","reload","airdropEnd","nfts","map","nft","key","owner","toLowerCase","purpose","title","id","image","claimed"],"mappings":"k5BAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAO,WAAP,C,GAGMC,CAAAA,M,+XAEJC,K,CAAQ,E,OAERC,iB,sEAAoB,kL,SAGpBC,c,2FAAiB,kBAAOC,OAAP,6IACT,OAAKC,KAAL,CAAWC,eAAX,CAA2BC,OAA3B,CAAmCJ,cAAnC,CAAkDC,OAAlD,EAA2DI,IAA3D,CAAgE,CAACC,IAAI,CAAE,MAAKJ,KAAL,CAAWK,OAAlB,CAAhE,CADS,QAEfC,MAAM,CAACC,QAAP,CAAgBC,MAAhB,GAFe,wD,wIAKR,iBACP,MACI,4BAAK,SAAS,CAAC,KAAf,EACA,wCADA,CAEA,yBAAG,KAAK,CAAC,UAAT,sDAAsE,KAAKR,KAAL,CAAWS,UAAjF,uDAFA,CAGA,2BAAK,KAAK,CAAC,MAAX,EACG,KAAKT,KAAL,CAAWU,IAAX,CAAgBC,GAAhB,CAAoB,SAACC,GAAD,CAAMC,GAAN,CAAc,CAC/B,GAAID,GAAG,CAACE,KAAJ,CAAUC,WAAV,KAA4B,MAAI,CAACf,KAAL,CAAWK,OAAX,CAAmBU,WAAnB,EAAhC,CAAkE,CAChE,GAAIH,GAAG,CAACI,OAAJ,GAAgB,GAApB,CAAyB,CACrB,MACI,4BAAK,KAAK,CAAC,KAAX,EACE,2BAAK,KAAK,CAAC,WAAX,EACE,8BAAKJ,GAAG,CAACK,KAAT,CADF,CAEE,yBAAG,KAAK,CAAC,UAAT,6BAFF,CAGE,yBAAG,KAAK,CAAC,UAAT,UAA0BL,GAAG,CAACM,EAA9B,CAHF,CAIE,2BAAK,KAAK,CAAC,YAAX,CAAwB,GAAG,uCAAiCN,GAAG,CAACO,KAArC,CAA3B,CAAyE,GAAG,CAAC,aAA7E,EAJF,CAKE,yBAAG,KAAK,CAAC,UAAT,CAAoB,EAAE,CAAC,MAAvB,sBALF,CAME,yBAAG,KAAK,CAAC,UAAT,EAAqBP,GAAG,CAACQ,OAAJ,GAAgB,GAAhB,CAAsB,8BAAQ,KAAK,CAAC,UAAd,CAAyB,QAAQ,KAAjC,YAAtB,CAA2E,8BAAQ,KAAK,CAAC,UAAd,CAAyB,OAAO,CAAE,yBAAM,CAAA,MAAI,CAACtB,cAAL,CAAoBc,GAAG,CAACM,EAAxB,CAAN,EAAlC,UAAhG,CANF,CADF,CADJ,CAYH,CAbD,IAaO,IAAIN,GAAG,CAACI,OAAJ,GAAgB,GAApB,CAAyB,CAC5B,MACI,4BAAK,KAAK,CAAC,KAAX,EACE,2BAAK,KAAK,CAAC,WAAX,EACE,8BAAKJ,GAAG,CAACK,KAAT,CADF,CAEE,yBAAG,KAAK,CAAC,UAAT,0BAFF,CAGE,0BAAI,KAAK,CAAC,UAAV,UAA2BL,GAAG,CAACM,EAA/B,CAHF,CAIE,2BAAK,KAAK,CAAC,YAAX,CAAwB,GAAG,uCAAiCN,GAAG,CAACO,KAArC,CAA3B,CAAyE,GAAG,CAAC,aAA7E,EAJF,CAKE,yBAAG,KAAK,CAAC,UAAT,CAAoB,EAAE,CAAC,MAAvB,sBALF,CAME,8BAAQ,KAAK,CAAC,mBAAd,CAAkC,QAAQ,KAA1C,YANF,CADF,CADJ,CAYH,CACF,CACH,MAAO,EAAP,CACD,CA/BA,CADH,CAHA,CADJ,CAwCD,C,oBArDkBzB,S,EAwDrB,cAAeC,CAAAA,MAAf","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\n\n\nclass MyNFTs extends Component {\n\n  state = { };\n\n  componentDidMount = async () => {\n  };\n\n  claimNFTBought = async (tokenId) => {\n    await this.props.airdropInstance.methods.claimNFTBought(tokenId).send({from: this.props.account});\n    window.location.reload()\n  }\n\n  render() {\n    return (\n        <div className=\"App\">\n        <h1>My NFTs</h1>\n        <p class=\"nft-info\">The NFTs bought from the sale can be claimed at: {this.props.airdropEnd}. The NFTs bought from Airdrop are already claimed!</p>\n        <div class=\"nfts\">\n          {this.props.nfts.map((nft, key) => {\n              if (nft.owner.toLowerCase() === this.props.account.toLowerCase()) {\n                if (nft.purpose === \"1\") {\n                    return (\n                        <div class=\"nft\">\n                          <div class=\"white-box\">\n                            <h2>{nft.title}</h2>\n                            <p class=\"nft-info\">Can claim at end of sale</p>\n                            <p class=\"nft-info\">Id: #{nft.id}</p>\n                            <img class=\"ipfs-image\" src={`https://ipfs.infura.io/ipfs/${nft.image}`} alt=\"IPFS Upload\"/>\n                            <p class=\"nft-info\" id=\"desc\">A cool cryptopunk</p>\n                            <p class=\"nft-info\">{nft.claimed === \"1\" ? <button class=\"purchase\" disabled>Claimed</button> : <button class=\"purchase\" onClick={() => this.claimNFTBought(nft.id)}>Claim</button>}</p>\n                          </div>\n                        </div>\n                      );\n                } else if (nft.purpose === \"0\") {\n                    return (\n                        <div class=\"nft\">\n                          <div class=\"white-box\">\n                            <h2>{nft.title}</h2>\n                            <p class=\"nft-info\">Received from Airdrop</p>\n                            <h3 class=\"nft-info\">Id: #{nft.id}</h3>\n                            <img class=\"ipfs-image\" src={`https://ipfs.infura.io/ipfs/${nft.image}`} alt=\"IPFS Upload\"/>\n                            <p class=\"nft-info\" id=\"desc\">A cool cryptopunk</p>\n                            <button class=\"purchase-disabled\" disabled>Claimed</button>\n                          </div>\n                        </div>\n                      );                    \n                }\n              }\n            return \"\";\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MyNFTs;\n"]},"metadata":{},"sourceType":"module"}