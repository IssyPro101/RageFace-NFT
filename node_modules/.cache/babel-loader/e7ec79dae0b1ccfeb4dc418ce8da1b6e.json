{"ast":null,"code":"var _jsxFileName = \"/Users/israeladelaja/Desktop/Product DApp/client/src/App.js\";\nimport React, { Component } from \"react\";\nimport ProductBuyContract from \"./contracts/ProductBuy.json\";\nimport TestToken from \"./contracts/TestToken.json\";\nimport getWeb3 from \"./getWeb3\";\nimport Navbar from \"./Navbar.js\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      products: null,\n      web3: null,\n      accounts: null,\n      contract: null,\n      token: null,\n      tokenName: null,\n      approved: false\n    };\n\n    this.componentDidMount = async () => {\n      try {\n        // Get network provider and web3 instance.\n        const web3 = await getWeb3(); // Use web3 to get the user's accounts.\n\n        const accounts = await web3.eth.getAccounts(); // Get the contract instance.\n\n        const networkId = await web3.eth.net.getId();\n        const deployedNetworkProduct = ProductBuyContract.networks[networkId];\n        const instance = new web3.eth.Contract(ProductBuyContract.abi, deployedNetworkProduct && deployedNetworkProduct.address);\n        let tokenAddress = await instance.methods.token().call();\n        const deployedNetworkToken = TestToken.networks[networkId];\n        const token = new web3.eth.Contract(TestToken.abi, deployedNetworkToken && deployedNetworkToken.address);\n        this.product = deployedNetworkToken.address;\n        let products = await instance.methods.viewProducts().call();\n        let tokenName = await token.methods.name().call();\n        let tokenSymbol = await token.methods.symbol().call(); // Set web3, accounts, and contract to the state, and then proceed with an\n        // example of interacting with the contract's methods.\n\n        this.setState({\n          web3,\n          accounts,\n          contract: instance,\n          products,\n          token,\n          tokenName,\n          tokenSymbol\n        });\n        console.log(this.state.products);\n      } catch (error) {\n        // Catch any errors for any of the above operations.\n        alert(\"Failed to load web3, accounts, or contract. Check console for details.\");\n        console.error(error);\n      }\n    };\n\n    this.handleApprove = async price => {\n      await this.state.token.methods.approve(this.product, price).send({\n        from: this.state.accounts[0]\n      });\n      this.setState({\n        approved: true\n      });\n    };\n\n    this.handleBuy = async id => {\n      await this.state.contract.methods.buyProduct(id).send({\n        from: this.state.accounts[0]\n      });\n    };\n  }\n\n  render() {\n    let content;\n\n    if (!this.state.web3) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Loading Web3, accounts, and contract...\");\n    } else if (this.state.products === null) {\n      content = React.createElement(\"h3\", {\n        id: \"no-products\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"No products have been listed.\");\n    } else {\n      content = this.state.products.map((product, key) => {\n        return React.createElement(\"div\", {\n          className: \"product\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, product.productName), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, \"Price: \", product.productPrice, \" \", this.state.tokenSymbol), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, \"Id: \", product.productId), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, \"Seller: \", product.productSeller), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, \"Status: \", product.status ? \"Sold\" : \"Unsold\"), !this.state.approved ? React.createElement(\"button\", {\n          onClick: () => this.handleApprove(product.productPrice),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }, \"Approve Contract\") : React.createElement(\"button\", {\n          onClick: () => this.handleBuy(product.productId),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }, \"Buy\"));\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      account: this.state.accounts[0],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Product Marketplace\"), React.createElement(\"div\", {\n      id: \"products\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, content));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/israeladelaja/Desktop/Product DApp/client/src/App.js"],"names":["React","Component","ProductBuyContract","TestToken","getWeb3","Navbar","App","state","products","web3","accounts","contract","token","tokenName","approved","componentDidMount","eth","getAccounts","networkId","net","getId","deployedNetworkProduct","networks","instance","Contract","abi","address","tokenAddress","methods","call","deployedNetworkToken","product","viewProducts","name","tokenSymbol","symbol","setState","console","log","error","alert","handleApprove","price","approve","send","from","handleBuy","id","buyProduct","render","content","map","key","productName","productPrice","productId","productSeller","status"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport ProductBuyContract from \"./contracts/ProductBuy.json\";\nimport TestToken from \"./contracts/TestToken.json\";\nimport getWeb3 from \"./getWeb3\";\nimport Navbar from \"./Navbar.js\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n  state = { products: null, web3: null, accounts: null, contract: null, token: null, tokenName: null, approved: false };\n\n  componentDidMount = async () => {\n    try {\n      // Get network provider and web3 instance.\n      const web3 = await getWeb3();\n\n      // Use web3 to get the user's accounts.\n      const accounts = await web3.eth.getAccounts();\n\n      // Get the contract instance.\n      const networkId = await web3.eth.net.getId();\n      const deployedNetworkProduct = ProductBuyContract.networks[networkId];\n      const instance = new web3.eth.Contract(\n        ProductBuyContract.abi,\n        deployedNetworkProduct && deployedNetworkProduct.address,\n      );\n\n      let tokenAddress = await instance.methods.token().call();\n\n      const deployedNetworkToken = TestToken.networks[networkId];\n      const token = new web3.eth.Contract(\n        TestToken.abi,\n        deployedNetworkToken && deployedNetworkToken.address,\n      );\n\n      this.product = deployedNetworkToken.address;\n\n      let products = await instance.methods.viewProducts().call();\n\n      let tokenName = await token.methods.name().call();\n\n      let tokenSymbol = await token.methods.symbol().call();\n\n      // Set web3, accounts, and contract to the state, and then proceed with an\n      // example of interacting with the contract's methods.\n      this.setState({ web3, accounts, contract: instance, products, token,tokenName, tokenSymbol });\n      console.log(this.state.products)\n\n    } catch (error) {\n      // Catch any errors for any of the above operations.\n      alert(\n        `Failed to load web3, accounts, or contract. Check console for details.`,\n      );\n      console.error(error);\n    }\n  };\n\n  handleApprove = async (price) => {\n    await this.state.token.methods.approve(this.product, price).send({from: this.state.accounts[0]});\n    this.setState({approved: true})\n  }\n\n  handleBuy = async (id) => {\n    await this.state.contract.methods.buyProduct(id).send({from: this.state.accounts[0]});\n  }\n  \n  render() {\n    let content;\n    if (!this.state.web3) {\n      return <div>Loading Web3, accounts, and contract...</div>;\n    } else if (this.state.products === null) {\n      content = <h3 id=\"no-products\">No products have been listed.</h3>\n    } else {\n      content = this.state.products.map((product, key) => {\n        return ( \n          <div className=\"product\">\n            <h2>{product.productName}</h2>\n            <p>Price: {product.productPrice} {this.state.tokenSymbol}</p>\n            <p>Id: {product.productId}</p>\n            <p>Seller: {product.productSeller}</p>\n            <p>Status: {product.status ? \"Sold\" : \"Unsold\"}</p>\n            {!this.state.approved ? <button onClick={() => this.handleApprove(product.productPrice)}>Approve Contract</button> : <button onClick={() => this.handleBuy(product.productId)}>Buy</button>}\n          </div>\n        )    \n      })\n    }\n    return (\n      <div className=\"App\">\n        <Navbar account={this.state.accounts[0]}/>\n        <h1>Product Marketplace</h1>\n        <div id=\"products\">\n          {content}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}