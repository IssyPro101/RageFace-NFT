{"ast":null,"code":"var _jsxFileName = \"/Users/israeladelaja/Desktop/Product DApp/client/src/App.js\";\nimport React, { Component } from \"react\";\nimport ProductBuyContract from \"./contracts/ProductBuy.json\";\nimport TestToken from \"./contracts/TestToken.json\";\nimport getWeb3 from \"./getWeb3\";\nimport Navbar from \"./Navbar.js\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      products: null,\n      web3: null,\n      account: null,\n      contract: null,\n      token: null,\n      tokenName: null,\n      approved: false,\n      product: null\n    };\n\n    this.componentDidMount = async () => {\n      try {\n        // Get network provider and web3 instance.\n        const web3 = await getWeb3(); // Use web3 to get the user's accounts.\n\n        const account = await ethereum.request({\n          method: 'eth_accounts'\n        }); // Get the contract instance.\n\n        const networkId = await web3.eth.net.getId();\n        const deployedNetworkProduct = ProductBuyContract.networks[networkId];\n        const instance = new web3.eth.Contract(ProductBuyContract.abi, deployedNetworkProduct && deployedNetworkProduct.address);\n        let tokenAddress = await instance.methods.token().call();\n        const deployedNetworkToken = TestToken.networks[networkId];\n        const token = new web3.eth.Contract(TestToken.abi, deployedNetworkToken && deployedNetworkToken.address);\n        let product = deployedNetworkToken.address;\n        let products = await instance.methods.viewProducts().call();\n        let tokenName = await token.methods.name().call();\n        let tokenSymbol = await token.methods.symbol().call(); // Set web3, accounts, and contract to the state, and then proceed with an\n        // example of interacting with the contract's methods.\n\n        this.setState({\n          web3,\n          account,\n          contract: instance,\n          products,\n          token,\n          tokenName,\n          tokenSymbol,\n          product\n        });\n      } catch (error) {\n        // Catch any errors for any of the above operations.\n        alert(\"Failed to load web3, accounts, or contract. Check console for details.\");\n        console.error(error);\n      }\n    };\n\n    this.handleApprove = async price => {\n      await this.state.token.methods.approve(this.state.product, price).send({\n        from: this.state.accounts[0]\n      });\n      let allowance = await this.state.token.methods.allowance(this.state.accounts[0], this.state.product).call();\n      console.log(allowance);\n      this.setState({\n        approved: true\n      });\n    };\n\n    this.handleBuy = async id => {\n      await this.state.contract.methods.buyProduct(id, this.state.accounts[0]).send({\n        from: this.state.accounts[0]\n      });\n    };\n  }\n\n  render() {\n    let content;\n\n    if (!this.state.web3) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"Loading Web3, accounts, and contract...\");\n    } else if (this.state.products.length === 0) {\n      content = React.createElement(\"h3\", {\n        id: \"no-products\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"No products have been listed yet.\");\n    } else {\n      content = this.state.products.map((product, key) => {\n        return React.createElement(\"div\", {\n          className: \"product\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, product.productName), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, \"Price: \", product.productPrice, \" \", this.state.tokenSymbol), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, \"Id: \", product.productId), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, \"Seller: \", product.productSeller), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }, \"Status: \", product.status ? \"Sold\" : \"Unsold\"), !this.state.approved ? React.createElement(\"button\", {\n          onClick: () => this.handleApprove(product.productPrice),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }, \"Approve Contract\") : React.createElement(\"button\", {\n          onClick: () => this.handleBuy(product.productId),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }, \"Buy\"));\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      account: this.state.accounts[0],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Product Marketplace\"), React.createElement(\"div\", {\n      id: \"products\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, content));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/israeladelaja/Desktop/Product DApp/client/src/App.js"],"names":["React","Component","ProductBuyContract","TestToken","getWeb3","Navbar","App","state","products","web3","account","contract","token","tokenName","approved","product","componentDidMount","ethereum","request","method","networkId","eth","net","getId","deployedNetworkProduct","networks","instance","Contract","abi","address","tokenAddress","methods","call","deployedNetworkToken","viewProducts","name","tokenSymbol","symbol","setState","error","alert","console","handleApprove","price","approve","send","from","accounts","allowance","log","handleBuy","id","buyProduct","render","content","length","map","key","productName","productPrice","productId","productSeller","status"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport ProductBuyContract from \"./contracts/ProductBuy.json\";\nimport TestToken from \"./contracts/TestToken.json\";\nimport getWeb3 from \"./getWeb3\";\nimport Navbar from \"./Navbar.js\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n  state = { products: null, web3: null, account: null, contract: null, token: null, tokenName: null, approved: false, product: null };\n\n  componentDidMount = async () => {\n    try {\n      // Get network provider and web3 instance.\n      const web3 = await getWeb3();\n\n      // Use web3 to get the user's accounts.\n      const account = await ethereum.request({ method: 'eth_accounts' });\n\n      // Get the contract instance.\n      const networkId = await web3.eth.net.getId();\n      const deployedNetworkProduct = ProductBuyContract.networks[networkId];\n      const instance = new web3.eth.Contract(\n        ProductBuyContract.abi,\n        deployedNetworkProduct && deployedNetworkProduct.address,\n      );\n\n      let tokenAddress = await instance.methods.token().call();\n\n      const deployedNetworkToken = TestToken.networks[networkId];\n      const token = new web3.eth.Contract(\n        TestToken.abi,\n        deployedNetworkToken && deployedNetworkToken.address,\n      );\n\n      let product = deployedNetworkToken.address;\n\n      let products = await instance.methods.viewProducts().call();\n\n      let tokenName = await token.methods.name().call();\n\n      let tokenSymbol = await token.methods.symbol().call();\n\n      // Set web3, accounts, and contract to the state, and then proceed with an\n      // example of interacting with the contract's methods.\n      this.setState({ web3, account, contract: instance, products, token,tokenName, tokenSymbol, product });\n\n    } catch (error) {\n      // Catch any errors for any of the above operations.\n      alert(\n        `Failed to load web3, accounts, or contract. Check console for details.`,\n      );\n      console.error(error);\n    }\n  };\n\n  handleApprove = async (price) => {\n    await this.state.token.methods.approve(this.state.product, price).send({from: this.state.accounts[0]});\n    let allowance = await this.state.token.methods.allowance(this.state.accounts[0], this.state.product).call();\n    console.log(allowance)\n    this.setState({approved: true})\n  }\n\n  handleBuy = async (id) => {\n    await this.state.contract.methods.buyProduct(id, this.state.accounts[0]).send({from: this.state.accounts[0]});\n  }\n  \n  render() {\n    let content;\n    if (!this.state.web3) {\n      return <div>Loading Web3, accounts, and contract...</div>;\n    } else if (this.state.products.length === 0) {\n      content = <h3 id=\"no-products\">No products have been listed yet.</h3>\n    } else {\n      content = this.state.products.map((product, key) => {\n        return ( \n          <div className=\"product\">\n            <h2>{product.productName}</h2>\n            <p>Price: {product.productPrice} {this.state.tokenSymbol}</p>\n            <p>Id: {product.productId}</p>\n            <p>Seller: {product.productSeller}</p>\n            <p>Status: {product.status ? \"Sold\" : \"Unsold\"}</p>\n            {!this.state.approved ? <button onClick={() => this.handleApprove(product.productPrice)}>Approve Contract</button> : <button onClick={() => this.handleBuy(product.productId)}>Buy</button>}\n          </div>\n        )    \n      })\n    }\n    return (\n      <div className=\"App\">\n        <Navbar account={this.state.accounts[0]}/>\n        <h1>Product Marketplace</h1>\n        <div id=\"products\">\n          {content}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}