{"ast":null,"code":"var _jsxFileName = \"/Users/israeladelaja/Desktop/NFTAirdrop/client/src/Main.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\n\nclass Main extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n\n    this.componentDidMount = async () => {};\n\n    this.buyNft = async (tokenId, tokenPrice) => {\n      await this.props.airdropInstance.methods.buyNft(tokenId).send({\n        from: this.props.account,\n        value: tokenPrice\n      });\n      window.location.reload();\n    };\n  }\n\n  render() {\n    if (this.props.nftsS === \"0\") {\n      return React.createElement(\"p\", {\n        id: \"no-nfts\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, \"No NFTs up for sale yet.\");\n    } else {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, \"Sale\"), React.createElement(\"p\", {\n        class: \"nft-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, this.props.nftsS, \" has been listed for sale\"), React.createElement(\"div\", {\n        class: \"nfts\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"nft\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"white-box\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, nft.title), React.createElement(\"h3\", {\n        class: \"nft-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \"#\", nft.id), React.createElement(\"img\", {\n        class: \"ipfs-image\",\n        src: \"https://ipfs.infura.io/ipfs/\".concat(nft.image),\n        alt: \"IPFS Upload\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        class: \"nft-info\",\n        id: \"desc\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, nft.description), React.createElement(\"p\", {\n        class: \"nft-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"Price: \", this.props.price / 10 ** 18, \" ether\"))), React.createElement(\"div\", {\n        class: \"nft\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"white-box\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"CryptoPunk#1\"), React.createElement(\"h3\", {\n        class: \"nft-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"#1\"), React.createElement(\"img\", {\n        class: \"ipfs-image\",\n        src: \"https://ipfs.infura.io/ipfs/\".concat(nft.image),\n        alt: \"IPFS Upload\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        class: \"nft-info\",\n        id: \"desc\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, nft.description), React.createElement(\"p\", {\n        class: \"nft-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"Price: \", this.props.price / 10 ** 18, \" ether\"))), React.createElement(\"div\", {\n        class: \"nft\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"white-box\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"CryptoPunk#1\"), React.createElement(\"h3\", {\n        class: \"nft-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"#2\"), React.createElement(\"img\", {\n        class: \"ipfs-image\",\n        src: \"https://ipfs.infura.io/ipfs/\".concat(nft.image),\n        alt: \"IPFS Upload\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        class: \"nft-info\",\n        id: \"desc\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, nft.description), React.createElement(\"p\", {\n        class: \"nft-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"Price: \", this.props.price / 10 ** 18, \" ether\")))));\n    }\n  }\n\n}\n\nexport default Main;","map":{"version":3,"sources":["/Users/israeladelaja/Desktop/NFTAirdrop/client/src/Main.js"],"names":["React","Component","Main","state","componentDidMount","buyNft","tokenId","tokenPrice","props","airdropInstance","methods","send","from","account","value","window","location","reload","render","nftsS","nft","title","id","image","description","price"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAO,WAAP;;AAGA,MAAMC,IAAN,SAAmBD,SAAnB,CAA6B;AAAA;AAAA;AAAA,SAE3BE,KAF2B,GAEnB,EAFmB;;AAAA,SAI3BC,iBAJ2B,GAIP,YAAY,CAC/B,CAL0B;;AAAA,SAO3BC,MAP2B,GAOlB,OAAOC,OAAP,EAAgBC,UAAhB,KAA+B;AACtC,YAAM,KAAKC,KAAL,CAAWC,eAAX,CAA2BC,OAA3B,CAAmCL,MAAnC,CAA0CC,OAA1C,EAAmDK,IAAnD,CAAwD;AAACC,QAAAA,IAAI,EAAE,KAAKJ,KAAL,CAAWK,OAAlB;AAA2BC,QAAAA,KAAK,EAAEP;AAAlC,OAAxD,CAAN;AACAQ,MAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD,KAV0B;AAAA;;AAY3BC,EAAAA,MAAM,GAAG;AACP,QAAI,KAAKV,KAAL,CAAWW,KAAX,KAAqB,GAAzB,EAA8B;AAC5B,aACE;AAAG,QAAA,EAAE,EAAC,SAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCADF;AAGD,KAJD,MAIO;AACL,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE;AAAG,QAAA,KAAK,EAAC,UAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAqB,KAAKX,KAAL,CAAWW,KAAhC,8BAFF,EAGE;AAAK,QAAA,KAAK,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACM;AAAK,QAAA,KAAK,EAAC,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,KAAK,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKC,GAAG,CAACC,KAAT,CADF,EAEE;AAAI,QAAA,KAAK,EAAC,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAuBD,GAAG,CAACE,EAA3B,CAFF,EAGE;AAAK,QAAA,KAAK,EAAC,YAAX;AAAwB,QAAA,GAAG,wCAAiCF,GAAG,CAACG,KAArC,CAA3B;AAAyE,QAAA,GAAG,EAAC,aAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,EAIE;AAAG,QAAA,KAAK,EAAC,UAAT;AAAoB,QAAA,EAAE,EAAC,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA+BH,GAAG,CAACI,WAAnC,CAJF,EAKE;AAAG,QAAA,KAAK,EAAC,UAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA4B,KAAKhB,KAAL,CAAWiB,KAAX,GAAiB,MAAI,EAAjD,WALF,CADF,CADN,EAUM;AAAK,QAAA,KAAK,EAAC,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,KAAK,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEE;AAAI,QAAA,KAAK,EAAC,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAGE;AAAK,QAAA,KAAK,EAAC,YAAX;AAAwB,QAAA,GAAG,wCAAiCL,GAAG,CAACG,KAArC,CAA3B;AAAyE,QAAA,GAAG,EAAC,aAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,EAIE;AAAG,QAAA,KAAK,EAAC,UAAT;AAAoB,QAAA,EAAE,EAAC,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA+BH,GAAG,CAACI,WAAnC,CAJF,EAKE;AAAG,QAAA,KAAK,EAAC,UAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA4B,KAAKhB,KAAL,CAAWiB,KAAX,GAAiB,MAAI,EAAjD,WALF,CADJ,CAVN,EAmBQ;AAAK,QAAA,KAAK,EAAC,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,KAAK,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEE;AAAI,QAAA,KAAK,EAAC,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAGE;AAAK,QAAA,KAAK,EAAC,YAAX;AAAwB,QAAA,GAAG,wCAAiCL,GAAG,CAACG,KAArC,CAA3B;AAAyE,QAAA,GAAG,EAAC,aAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,EAIE;AAAG,QAAA,KAAK,EAAC,UAAT;AAAoB,QAAA,EAAE,EAAC,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA+BH,GAAG,CAACI,WAAnC,CAJF,EAKE;AAAG,QAAA,KAAK,EAAC,UAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA4B,KAAKhB,KAAL,CAAWiB,KAAX,GAAiB,MAAI,EAAjD,WALF,CADF,CAnBR,CAHF,CADF;AAmCD;AACF;;AAtD0B;;AAyD7B,eAAevB,IAAf","sourcesContent":["import React, { Component } from \"react\";\n\nimport \"./App.css\";\n\n\nclass Main extends Component {\n\n  state = {};\n\n  componentDidMount = async () => {\n  };\n\n  buyNft = async (tokenId, tokenPrice) => {\n    await this.props.airdropInstance.methods.buyNft(tokenId).send({from: this.props.account, value: tokenPrice});\n    window.location.reload()\n  }\n\n  render() {\n    if (this.props.nftsS === \"0\") {\n      return(\n        <p id=\"no-nfts\">No NFTs up for sale yet.</p>\n      );\n    } else {\n      return (\n        <div className=\"App\">\n          <h1>Sale</h1>\n          <p class=\"nft-info\">{this.props.nftsS} has been listed for sale</p>\n          <div class=\"nfts\">\n                <div class=\"nft\">\n                  <div class=\"white-box\">\n                    <h2>{nft.title}</h2>\n                    <h3 class=\"nft-info\">#{nft.id}</h3>\n                    <img class=\"ipfs-image\" src={`https://ipfs.infura.io/ipfs/${nft.image}`} alt=\"IPFS Upload\"/>\n                    <p class=\"nft-info\" id=\"desc\">{nft.description}</p>\n                    <p class=\"nft-info\">Price: {this.props.price/10**18} ether</p>\n                  </div>\n                </div>\n                <div class=\"nft\">\n                    <div class=\"white-box\">\n                      <h2>CryptoPunk#1</h2>\n                      <h3 class=\"nft-info\">#1</h3>\n                      <img class=\"ipfs-image\" src={`https://ipfs.infura.io/ipfs/${nft.image}`} alt=\"IPFS Upload\"/>\n                      <p class=\"nft-info\" id=\"desc\">{nft.description}</p>\n                      <p class=\"nft-info\">Price: {this.props.price/10**18} ether</p>\n                    </div>\n                  </div>\n                  <div class=\"nft\">\n                    <div class=\"white-box\">\n                      <h2>CryptoPunk#1</h2>\n                      <h3 class=\"nft-info\">#2</h3>\n                      <img class=\"ipfs-image\" src={`https://ipfs.infura.io/ipfs/${nft.image}`} alt=\"IPFS Upload\"/>\n                      <p class=\"nft-info\" id=\"desc\">{nft.description}</p>\n                      <p class=\"nft-info\">Price: {this.props.price/10**18} ether</p>\n                    </div>\n                  </div>\n          </div>\n        </div>\n      );\n    }\n  }\n}\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}