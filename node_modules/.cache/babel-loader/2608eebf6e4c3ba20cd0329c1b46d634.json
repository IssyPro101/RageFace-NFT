{"ast":null,"code":"var _jsxFileName = \"/Users/israeladelaja/Desktop/NFTAirdrop/client/src/Airdrop.js\";\nimport React, { Component } from 'react';\nimport \"./App.css\";\n\nclass ListProducts extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n\n    this.componentDidMount = async () => {};\n  }\n\n  render() {\n    if (this.props.nftsA === \"0\") {\n      return React.createElement(\"p\", {\n        id: \"no-nfts\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, \"No NFTs available for airdrop yet.\");\n    } else {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, \"Airdrop\"), this.props.nfts.map((nft, key) => {\n        if (nft.purpose == 0) {\n          return React.createElement(\"div\", {\n            class: \"nft\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 24\n            },\n            __self: this\n          }, React.createElement(\"h2\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 25\n            },\n            __self: this\n          }, nft.title), React.createElement(\"p\", {\n            class: \"nft-info\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 26\n            },\n            __self: this\n          }, \"Id: #\", nft.id), React.createElement(\"img\", {\n            id: \"ipfs-image\",\n            src: \"https://ipfs.infura.io/ipfs/\".concat(nft.image),\n            alt: \"IPFS Upload\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 27\n            },\n            __self: this\n          }), React.createElement(\"p\", {\n            class: \"nft-info\",\n            id: \"desc\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 28\n            },\n            __self: this\n          }, nft.description), React.createElement(\"p\", {\n            class: \"nft-info\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 29\n            },\n            __self: this\n          }, \"Price: \", nft.price, \" ether\"), React.createElement(\"p\", {\n            class: \"nft-info\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 30\n            },\n            __self: this\n          }, \"Status: \", nft.status == 0 ? \"Unclaimed\" : \"Claimed\"), React.createElement(\"button\", {\n            class: \"purchase\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 31\n            },\n            __self: this\n          }, \"Claim\"));\n        }\n      }));\n    }\n  }\n\n}\n\nexport default ListProducts;","map":{"version":3,"sources":["/Users/israeladelaja/Desktop/NFTAirdrop/client/src/Airdrop.js"],"names":["React","Component","ListProducts","state","componentDidMount","render","props","nftsA","nfts","map","nft","key","purpose","title","id","image","description","price","status"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;;AAEA,MAAMC,YAAN,SAA2BD,SAA3B,CAAqC;AAAA;AAAA;AAAA,SAEnCE,KAFmC,GAE3B,EAF2B;;AAAA,SAInCC,iBAJmC,GAIf,YAAY,CAC/B,CALkC;AAAA;;AAQnCC,EAAAA,MAAM,GAAG;AACP,QAAI,KAAKC,KAAL,CAAWC,KAAX,KAAqB,GAAzB,EAA8B;AAC5B,aACE;AAAG,QAAA,EAAE,EAAC,SAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CADF;AAGD,KAJD,MAIO;AACL,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEG,KAAKD,KAAL,CAAWE,IAAX,CAAgBC,GAAhB,CAAoB,CAACC,GAAD,EAAMC,GAAN,KAAc;AACjC,YAAID,GAAG,CAACE,OAAJ,IAAe,CAAnB,EAAsB;AACpB,iBACE;AAAK,YAAA,KAAK,EAAC,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAKF,GAAG,CAACG,KAAT,CADF,EAEE;AAAG,YAAA,KAAK,EAAC,UAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAA0BH,GAAG,CAACI,EAA9B,CAFF,EAGE;AAAK,YAAA,EAAE,EAAC,YAAR;AAAqB,YAAA,GAAG,wCAAiCJ,GAAG,CAACK,KAArC,CAAxB;AAAsE,YAAA,GAAG,EAAC,aAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,EAIE;AAAG,YAAA,KAAK,EAAC,UAAT;AAAoB,YAAA,EAAE,EAAC,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA+BL,GAAG,CAACM,WAAnC,CAJF,EAKE;AAAG,YAAA,KAAK,EAAC,UAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAA4BN,GAAG,CAACO,KAAhC,WALF,EAME;AAAG,YAAA,KAAK,EAAC,UAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAA6BP,GAAG,CAACQ,MAAJ,IAAc,CAAd,GAAkB,WAAlB,GAAgC,SAA7D,CANF,EAOE;AAAQ,YAAA,KAAK,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAPF,CADF;AAWD;AACF,OAdA,CAFH,CADF;AAoBD;AAEF;;AApCkC;;AAuCrC,eAAehB,YAAf","sourcesContent":["import React, { Component } from 'react'\nimport \"./App.css\";\n\nclass ListProducts extends Component {\n\n  state = {  }\n\n  componentDidMount = async () => {\n  };\n\n\n  render() {\n    if (this.props.nftsA === \"0\") {\n      return(\n        <p id=\"no-nfts\">No NFTs available for airdrop yet.</p>\n      );\n    } else {\n      return (\n        <div className=\"App\">\n          <h1>Airdrop</h1>\n          {this.props.nfts.map((nft, key) => {\n            if (nft.purpose == 0) {\n              return (\n                <div class=\"nft\">\n                  <h2>{nft.title}</h2>\n                  <p class=\"nft-info\">Id: #{nft.id}</p>\n                  <img id=\"ipfs-image\" src={`https://ipfs.infura.io/ipfs/${nft.image}`} alt=\"IPFS Upload\"/>\n                  <p class=\"nft-info\" id=\"desc\">{nft.description}</p>\n                  <p class=\"nft-info\">Price: {nft.price} ether</p>\n                  <p class=\"nft-info\">Status: {nft.status == 0 ? \"Unclaimed\" : \"Claimed\"}</p>\n                  <button class=\"purchase\">Claim</button>\n                </div>\n              );\n            }\n          })}\n        </div>\n      );\n    }\n\n  }\n}\n\nexport default ListProducts;\n"]},"metadata":{},"sourceType":"module"}