{"ast":null,"code":"var _jsxFileName = \"/Users/israeladelaja/Desktop/NFTAirdrop/client/src/App.js\";\nimport React from \"../node_modules/react\";\nimport \"./App.css\";\nimport \"./index.css\";\nimport Main from \"./Main\";\nimport Navbar from \"./Navbar\";\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n/**\n * @App Build Decentralized Art Market using ERC-721\n * @Util initail App build main class\n * @Book Learn Ethereum\n * @author brian wu\n */\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      account: \"\"\n    };\n\n    this.componentDidMount = async () => {\n      try {\n        // Get network provider and web3 instance.\n        const web3 = await getWeb3(); // Use web3 to get the user's accounts.\n\n        const account = await window.ethereum.request({\n          method: 'eth_accounts'\n        });\n        console.log(account[0]); // Get the contract instance.\n\n        const networkId = await web3.eth.net.getId();\n        const deployedNetworkAirdrop = ProductBuyContract.networks[networkId];\n        const instance = new web3.eth.Contract(ProductBuyContract.abi, deployedNetworkProduct && deployedNetworkProduct.address);\n      } catch (error) {\n        // Catch any errors for any of the above operations.\n        alert(\"Please connect your metamask and switch to the binance test chain\");\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      account: this.state.account,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(Main, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    })), React.createElement(Route, {\n      exact: true,\n      path: \"/airdrop\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(ListProducts, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/israeladelaja/Desktop/NFTAirdrop/client/src/App.js"],"names":["React","Main","Navbar","BrowserRouter","Router","Switch","Route","App","Component","state","account","componentDidMount","web3","getWeb3","window","ethereum","request","method","console","log","networkId","eth","net","getId","deployedNetworkAirdrop","ProductBuyContract","networks","instance","Contract","abi","deployedNetworkProduct","address","error","alert","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,uBAAlB;AACA,OAAO,WAAP;AACA,OAAO,aAAP;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,QAAuD,kBAAvD;AACA;;;;;;;AAMA,MAAMC,GAAN,SAAkBP,KAAK,CAACQ,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAEhCC,KAFgC,GAExB;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAFwB;;AAAA,SAIhCC,iBAJgC,GAIZ,YAAY;AAC9B,UAAI;AACF;AACA,cAAMC,IAAI,GAAG,MAAMC,OAAO,EAA1B,CAFE,CAIF;;AACA,cAAMH,OAAO,GAAG,MAAMI,MAAM,CAACC,QAAP,CAAgBC,OAAhB,CAAwB;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAAxB,CAAtB;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYT,OAAO,CAAC,CAAD,CAAnB,EANE,CAQF;;AACA,cAAMU,SAAS,GAAG,MAAMR,IAAI,CAACS,GAAL,CAASC,GAAT,CAAaC,KAAb,EAAxB;AACA,cAAMC,sBAAsB,GAAGC,kBAAkB,CAACC,QAAnB,CAA4BN,SAA5B,CAA/B;AACA,cAAMO,QAAQ,GAAG,IAAIf,IAAI,CAACS,GAAL,CAASO,QAAb,CACfH,kBAAkB,CAACI,GADJ,EAEfC,sBAAsB,IAAIA,sBAAsB,CAACC,OAFlC,CAAjB;AAKD,OAhBD,CAgBE,OAAOC,KAAP,EAAc;AACd;AACAC,QAAAA,KAAK,qEAAL;AAID;AACF,KA5B+B;AAAA;;AA8BhCC,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKzB,KAAL,CAAWC,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAFF,EAKE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,UAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CALF,CADF,CADF,CADF;AAeD;;AA9C+B;;AAgDlC,eAAeH,GAAf","sourcesContent":["import React from \"../node_modules/react\";\nimport \"./App.css\";\nimport \"./index.css\";\nimport Main from \"./Main\";\nimport Navbar from \"./Navbar\";\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n/**\n * @App Build Decentralized Art Market using ERC-721\n * @Util initail App build main class\n * @Book Learn Ethereum\n * @author brian wu\n */\nclass App extends React.Component {\n\n  state = { account: \"\" }\n\n  componentDidMount = async () => {\n    try {\n      // Get network provider and web3 instance.\n      const web3 = await getWeb3();\n\n      // Use web3 to get the user's accounts.\n      const account = await window.ethereum.request({ method: 'eth_accounts' });\n      console.log(account[0])\n\n      // Get the contract instance.\n      const networkId = await web3.eth.net.getId();\n      const deployedNetworkAirdrop = ProductBuyContract.networks[networkId];\n      const instance = new web3.eth.Contract(\n        ProductBuyContract.abi,\n        deployedNetworkProduct && deployedNetworkProduct.address,\n      );\n\n    } catch (error) {\n      // Catch any errors for any of the above operations.\n      alert(\n        `Please connect your metamask and switch to the binance test chain`,\n      );\n\n    }\n  }\n\n  render() {\n    return (\n      <Router>\n        <Switch>\n          <div>\n            <Navbar account={this.state.account}/>\n            <Route exact path='/'>\n                <Main />\n            </Route>\n            <Route exact path='/airdrop'>\n                <ListProducts />\n            </Route>\n          </div>\n        </Switch>\n      </Router>\n    );\n  }\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}