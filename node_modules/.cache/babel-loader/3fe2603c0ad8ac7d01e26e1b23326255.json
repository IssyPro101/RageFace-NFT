{"ast":null,"code":"var _jsxFileName = \"/Users/israeladelaja/Desktop/NFTAirdrop/client/src/Airdrop.js\";\nimport React, { Component } from 'react';\nimport \"./App.css\";\n\nclass ListProducts extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      reset: \"\"\n    };\n\n    this.componentDidMount = async () => {};\n\n    this.claimNft = async tokenId => {\n      await this.props.airdropInstance.methods.claimNft(tokenId).send({\n        from: this.props.account\n      });\n      window.location.reload();\n    };\n  }\n\n  render() {\n    if (this.props.nftsA === \"0\") {\n      return React.createElement(\"p\", {\n        id: \"no-nfts\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, \"No NFTs available for airdrop yet.\");\n    } else {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, \"Airdrop\"), React.createElement(\"p\", {\n        class: \"nft-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, this.props.nftsA, \" has been listed for airdrop\"), React.createElement(\"div\", {\n        class: \"nfts\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, this.props.nfts.map((nft, key) => {\n        if (nft.purpose === \"0\") {\n          return React.createElement(\"div\", {\n            class: \"nft\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 30\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            class: \"white-box\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 31\n            },\n            __self: this\n          }, React.createElement(\"h2\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 32\n            },\n            __self: this\n          }, nft.title), React.createElement(\"h3\", {\n            class: \"nft-info\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 33\n            },\n            __self: this\n          }, \"Id: #\", nft.id), React.createElement(\"img\", {\n            class: \"ipfs-image\",\n            src: \"https://ipfs.infura.io/ipfs/\".concat(nft.image),\n            alt: \"IPFS Upload\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 34\n            },\n            __self: this\n          }), React.createElement(\"p\", {\n            class: \"nft-info\",\n            id: \"desc\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 35\n            },\n            __self: this\n          }, nft.description), React.createElement(\"p\", {\n            class: \"nft-info\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 36\n            },\n            __self: this\n          }, \"Price: \", nft.price / 10 ** 18, \" ether\"), nft.status === 0 ? React.createElement(\"button\", {\n            onClick: () => this.claimNft(nft.id),\n            class: \"purchase\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 37\n            },\n            __self: this\n          }, \"Claim\") : React.createElement(\"button\", {\n            class: \"purchase-disabled\",\n            disabled: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 37\n            },\n            __self: this\n          }, \"Claimed\")));\n        }\n      })));\n    }\n  }\n\n}\n\nexport default ListProducts;","map":{"version":3,"sources":["/Users/israeladelaja/Desktop/NFTAirdrop/client/src/Airdrop.js"],"names":["React","Component","ListProducts","state","reset","componentDidMount","claimNft","tokenId","props","airdropInstance","methods","send","from","account","window","location","reload","render","nftsA","nfts","map","nft","key","purpose","title","id","image","description","price","status"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;;AAEA,MAAMC,YAAN,SAA2BD,SAA3B,CAAqC;AAAA;AAAA;AAAA,SAEnCE,KAFmC,GAE3B;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAF2B;;AAAA,SAInCC,iBAJmC,GAIf,YAAY,CAC/B,CALkC;;AAAA,SAOnCC,QAPmC,GAOxB,MAAOC,OAAP,IAAmB;AAC5B,YAAM,KAAKC,KAAL,CAAWC,eAAX,CAA2BC,OAA3B,CAAmCJ,QAAnC,CAA4CC,OAA5C,EAAqDI,IAArD,CAA0D;AAACC,QAAAA,IAAI,EAAE,KAAKJ,KAAL,CAAWK;AAAlB,OAA1D,CAAN;AACAC,MAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD,KAVkC;AAAA;;AAYnCC,EAAAA,MAAM,GAAG;AACP,QAAI,KAAKT,KAAL,CAAWU,KAAX,KAAqB,GAAzB,EAA8B;AAC5B,aACE;AAAG,QAAA,EAAE,EAAC,SAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CADF;AAGD,KAJD,MAIO;AACL,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE;AAAG,QAAA,KAAK,EAAC,UAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAqB,KAAKV,KAAL,CAAWU,KAAhC,iCAFF,EAGE;AAAK,QAAA,KAAK,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKV,KAAL,CAAWW,IAAX,CAAgBC,GAAhB,CAAoB,CAACC,GAAD,EAAMC,GAAN,KAAc;AACjC,YAAID,GAAG,CAACE,OAAJ,KAAgB,GAApB,EAAyB;AACvB,iBACE;AAAK,YAAA,KAAK,EAAC,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE;AAAK,YAAA,KAAK,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAKF,GAAG,CAACG,KAAT,CADF,EAEE;AAAI,YAAA,KAAK,EAAC,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAA2BH,GAAG,CAACI,EAA/B,CAFF,EAGE;AAAK,YAAA,KAAK,EAAC,YAAX;AAAwB,YAAA,GAAG,wCAAiCJ,GAAG,CAACK,KAArC,CAA3B;AAAyE,YAAA,GAAG,EAAC,aAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,EAIE;AAAG,YAAA,KAAK,EAAC,UAAT;AAAoB,YAAA,EAAE,EAAC,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA+BL,GAAG,CAACM,WAAnC,CAJF,EAKE;AAAG,YAAA,KAAK,EAAC,UAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAA4BN,GAAG,CAACO,KAAJ,GAAU,MAAI,EAA1C,WALF,EAMGP,GAAG,CAACQ,MAAJ,KAAe,CAAf,GAAmB;AAAQ,YAAA,OAAO,EAAE,MAAM,KAAKvB,QAAL,CAAce,GAAG,CAACI,EAAlB,CAAvB;AAA8C,YAAA,KAAK,EAAC,UAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAnB,GAAmG;AAAS,YAAA,KAAK,EAAC,mBAAf;AAAmC,YAAA,QAAQ,MAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBANtG,CADF,CADF;AAYD;AACF,OAfA,CADH,CAHF,CADF;AAwBD;AAEF;;AA5CkC;;AA+CrC,eAAevB,YAAf","sourcesContent":["import React, { Component } from 'react'\nimport \"./App.css\";\n\nclass ListProducts extends Component {\n\n  state = { reset: \"\" }\n\n  componentDidMount = async () => {\n  };\n\n  claimNft = async (tokenId) => {\n    await this.props.airdropInstance.methods.claimNft(tokenId).send({from: this.props.account});\n    window.location.reload()\n  } \n\n  render() {\n    if (this.props.nftsA === \"0\") {\n      return(\n        <p id=\"no-nfts\">No NFTs available for airdrop yet.</p>\n      );\n    } else {\n      return (\n        <div className=\"App\">\n          <h1>Airdrop</h1>\n          <p class=\"nft-info\">{this.props.nftsA} has been listed for airdrop</p>\n          <div class=\"nfts\">\n            {this.props.nfts.map((nft, key) => {\n              if (nft.purpose === \"0\") {\n                return (\n                  <div class=\"nft\">\n                    <div class=\"white-box\">\n                      <h2>{nft.title}</h2>\n                      <h3 class=\"nft-info\">Id: #{nft.id}</h3>\n                      <img class=\"ipfs-image\" src={`https://ipfs.infura.io/ipfs/${nft.image}`} alt=\"IPFS Upload\"/>\n                      <p class=\"nft-info\" id=\"desc\">{nft.description}</p>\n                      <p class=\"nft-info\">Price: {nft.price/10**18} ether</p>\n                      {nft.status === 0 ? <button onClick={() => this.claimNft(nft.id)} class=\"purchase\">Claim</button> : <button  class=\"purchase-disabled\" disabled>Claimed</button>}\n                    </div>\n                  </div>\n                );\n              }\n            })}\n          </div>\n        </div>\n      );\n    }\n\n  }\n}\n\nexport default ListProducts;\n"]},"metadata":{},"sourceType":"module"}