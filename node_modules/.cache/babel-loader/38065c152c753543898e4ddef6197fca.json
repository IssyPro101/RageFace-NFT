{"ast":null,"code":"var _jsxFileName = \"/Users/israeladelaja/Desktop/Product DApp/client/src/MyProducts.js\";\nimport React, { Component } from \"react\";\nimport ProductBuyContract from \"./contracts/ProductBuy.json\";\nimport TestToken from \"./contracts/TestToken.json\";\nimport getWeb3 from \"./getWeb3\";\nimport Navbar from \"./Navbar.js\";\nimport \"./App.css\";\n\nclass MyProducts extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      products: null,\n      web3: null,\n      account: null,\n      contract: null,\n      token: null,\n      tokenName: null,\n      approved: false,\n      product: null\n    };\n\n    this.componentDidMount = async () => {\n      try {\n        // Get network provider and web3 instance.\n        const web3 = await getWeb3(); // Use web3 to get the user's accounts.\n\n        const account = await window.ethereum.request({\n          method: 'eth_accounts'\n        });\n        console.log(account[0]); // Get the contract instance.\n\n        const networkId = await web3.eth.net.getId();\n        const deployedNetworkProduct = ProductBuyContract.networks[networkId];\n        const instance = new web3.eth.Contract(ProductBuyContract.abi, deployedNetworkProduct && deployedNetworkProduct.address);\n        let tokenAddress = await instance.methods.token().call();\n        const deployedNetworkToken = TestToken.networks[networkId];\n        const token = new web3.eth.Contract(TestToken.abi, deployedNetworkToken && tokenAddress);\n        let product = deployedNetworkProduct.address;\n        let products = await instance.methods.myProducts(account).call();\n        let tokenName = await token.methods.name().call();\n        let tokenSymbol = await token.methods.symbol().call(); // Set web3, accounts, and contract to the state, and then proceed with an\n        // example of interacting with the contract's methods.\n\n        this.setState({\n          web3,\n          account: account[0],\n          contract: instance,\n          products,\n          token,\n          tokenName,\n          tokenSymbol,\n          product\n        });\n      } catch (error) {\n        // Catch any errors for any of the above operations.\n        alert(\"Failed to load web3, accounts, or contract. Check console for details.\");\n        console.error(error);\n      }\n    };\n  }\n\n  render() {\n    let content;\n\n    if (!this.state.web3) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"Loading Web3, accounts, and contracts...\");\n    } else if (this.state.products.length === 0) {\n      content = React.createElement(\"h3\", {\n        id: \"no-products\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"No products have been listed yet.\");\n    } else {\n      content = this.state.products.map((product, key) => {\n        if (product.productOwner === this.state.account) {\n          let link = this.getProductLink();\n          return React.createElement(\"div\", {\n            className: \"product\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 69\n            },\n            __self: this\n          }, React.createElement(\"h2\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 70\n            },\n            __self: this\n          }, product.productName), React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 71\n            },\n            __self: this\n          }, \"Product Link: \", product.productLink), React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 72\n            },\n            __self: this\n          }, \"Price: \", product.productPrice, \" \", this.state.tokenSymbol), React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 73\n            },\n            __self: this\n          }, \"Id: \", product.productId), React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 74\n            },\n            __self: this\n          }, \"Seller: \", product.productSeller));\n        }\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      account: this.state.account,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"My Products\"), React.createElement(\"div\", {\n      id: \"products\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, content));\n  }\n\n}\n\nexport default MyProducts;","map":{"version":3,"sources":["/Users/israeladelaja/Desktop/Product DApp/client/src/MyProducts.js"],"names":["React","Component","ProductBuyContract","TestToken","getWeb3","Navbar","MyProducts","state","products","web3","account","contract","token","tokenName","approved","product","componentDidMount","window","ethereum","request","method","console","log","networkId","eth","net","getId","deployedNetworkProduct","networks","instance","Contract","abi","address","tokenAddress","methods","call","deployedNetworkToken","myProducts","name","tokenSymbol","symbol","setState","error","alert","render","content","length","map","key","productOwner","link","getProductLink","productName","productLink","productPrice","productId","productSeller"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport ProductBuyContract from \"./contracts/ProductBuy.json\";\nimport TestToken from \"./contracts/TestToken.json\";\nimport getWeb3 from \"./getWeb3\";\nimport Navbar from \"./Navbar.js\";\n\nimport \"./App.css\";\n\nclass MyProducts extends Component {\n  state = { products: null, web3: null, account: null, contract: null, token: null, tokenName: null, approved: false, product: null };\n\n  componentDidMount = async () => {\n    try {\n      // Get network provider and web3 instance.\n      const web3 = await getWeb3();\n\n      // Use web3 to get the user's accounts.\n      const account = await window.ethereum.request({ method: 'eth_accounts' });\n      console.log(account[0])\n\n      // Get the contract instance.\n      const networkId = await web3.eth.net.getId();\n      const deployedNetworkProduct = ProductBuyContract.networks[networkId];\n      const instance = new web3.eth.Contract(\n        ProductBuyContract.abi,\n        deployedNetworkProduct && deployedNetworkProduct.address,\n      );\n\n      let tokenAddress = await instance.methods.token().call();\n\n      const deployedNetworkToken = TestToken.networks[networkId];\n      const token = new web3.eth.Contract(\n        TestToken.abi,\n        deployedNetworkToken && tokenAddress,\n      );\n\n      let product = deployedNetworkProduct.address;\n\n      let products = await instance.methods.myProducts(account).call();\n\n      let tokenName = await token.methods.name().call();\n\n      let tokenSymbol = await token.methods.symbol().call();\n\n      // Set web3, accounts, and contract to the state, and then proceed with an\n      // example of interacting with the contract's methods.\n      this.setState({ web3, account: account[0], contract: instance, products, token,tokenName, tokenSymbol, product});\n\n    } catch (error) {\n      // Catch any errors for any of the above operations.\n      alert(\n        `Failed to load web3, accounts, or contract. Check console for details.`,\n      );\n      console.error(error);\n    }\n  };\n  \n  render() {\n    let content;\n    if (!this.state.web3) {\n      return <div>Loading Web3, accounts, and contracts...</div>;\n    } else if (this.state.products.length === 0) {\n      content = <h3 id=\"no-products\">No products have been listed yet.</h3>\n    } else {\n      content = this.state.products.map((product, key) => {\n        if (product.productOwner === this.state.account) {\n          let link = this.getProductLink()\n          return ( \n            <div className=\"product\">\n              <h2>{product.productName}</h2>\n              <p>Product Link: {product.productLink}</p>\n              <p>Price: {product.productPrice} {this.state.tokenSymbol}</p>\n              <p>Id: {product.productId}</p>\n              <p>Seller: {product.productSeller}</p>\n            </div>\n          )    \n        }\n\n      })\n    }\n    return (\n      <div className=\"App\">\n        <Navbar account={this.state.account}/>\n        <h1>My Products</h1>\n        <div id=\"products\">\n          {content}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MyProducts;\n"]},"metadata":{},"sourceType":"module"}