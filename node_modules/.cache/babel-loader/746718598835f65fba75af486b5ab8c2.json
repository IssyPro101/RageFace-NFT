{"ast":null,"code":"'use strict';\n\nconst toCamel = require('./lib/object-to-camel');\n\nconst _require = require('multiaddr'),\n      Multiaddr = _require.Multiaddr;\n\nconst configure = require('./lib/configure');\n\nconst toUrlSearchParams = require('./lib/to-url-search-params');\n/**\n * @typedef {import('./types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/root').API<HTTPClientExtraOptions>} RootAPI\n */\n\n\nmodule.exports = configure(api => {\n  /**\n   * @type {RootAPI[\"id\"]}\n   */\n  async function id(options = {}) {\n    const res = await api.post('id', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: options.peerId ? options.peerId.toString() : undefined,\n        ...options\n      }),\n      headers: options.headers\n    });\n    const data = await res.json();\n    const output = { ...toCamel(data)\n    };\n\n    if (output.addresses) {\n      output.addresses = output.addresses.map(\n      /** @type {string} */\n      ma => new Multiaddr(ma));\n    } // @ts-ignore server output is not typed\n\n\n    return output;\n  }\n\n  return id;\n});","map":null,"metadata":{},"sourceType":"script"}