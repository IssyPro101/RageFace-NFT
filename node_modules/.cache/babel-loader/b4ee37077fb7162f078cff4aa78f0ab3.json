{"ast":null,"code":"var _jsxFileName = \"/Users/israeladelaja/Desktop/NFTAirdrop/client/src/MyNFTs.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\n\nclass MyNFTs extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n\n    this.componentDidMount = async () => {};\n\n    this.claimNFTBought = async tokenId => {\n      await this.props.airdropInstance.methods.claimNFTBought(tokenId).send({\n        from: this.props.account\n      });\n      window.location.reload();\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }\n    }, \"My NFTs\"), /*#__PURE__*/React.createElement(\"p\", {\n      class: \"nft-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }\n    }, \"The NFTs bought from the sale can be claimed at: \", this.props.airdropEnd, \".\"), /*#__PURE__*/React.createElement(\"p\", {\n      class: \"nft-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }\n    }, \"The NFTs bought from Airdrop are already claimed!\"), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"nfts\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }\n    }, this.props.nfts.map((nft, key) => {\n      if (nft.owner.toLowerCase() === this.props.account.toLowerCase()) {\n        if (nft.purpose === \"1\") {\n          return /*#__PURE__*/React.createElement(\"div\", {\n            class: \"nft\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            class: \"white-box\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 27\n            }\n          }, /*#__PURE__*/React.createElement(\"h2\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 29\n            }\n          }, nft.title), /*#__PURE__*/React.createElement(\"p\", {\n            class: \"nft-info\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 29\n            }\n          }, \"Can claim at end of sale\"), /*#__PURE__*/React.createElement(\"p\", {\n            class: \"nft-info\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 29\n            }\n          }, \"Id: #\", nft.id), /*#__PURE__*/React.createElement(\"img\", {\n            class: \"ipfs-image\",\n            src: `https://ipfs.infura.io/ipfs/${nft.image}`,\n            alt: \"IPFS Upload\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 29\n            }\n          }), /*#__PURE__*/React.createElement(\"p\", {\n            class: \"nft-info\",\n            id: \"desc\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 29\n            }\n          }, \"A cool Tsunami NFT\"), /*#__PURE__*/React.createElement(\"p\", {\n            class: \"nft-info\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 29\n            }\n          }, nft.claimed === \"1\" ? /*#__PURE__*/React.createElement(\"button\", {\n            class: \"purchase\",\n            disabled: true,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 72\n            }\n          }, \"Claimed\") : /*#__PURE__*/React.createElement(\"button\", {\n            class: \"purchase\",\n            onClick: () => this.claimNFTBought(nft.id),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 125\n            }\n          }, \"Claim\"))));\n        } else if (nft.purpose === \"0\") {\n          return /*#__PURE__*/React.createElement(\"div\", {\n            class: \"nft\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            class: \"white-box\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 27\n            }\n          }, /*#__PURE__*/React.createElement(\"h2\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 29\n            }\n          }, nft.title), /*#__PURE__*/React.createElement(\"p\", {\n            class: \"nft-info\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 29\n            }\n          }, \"Received from Airdrop\"), /*#__PURE__*/React.createElement(\"h3\", {\n            class: \"nft-info\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 29\n            }\n          }, \"Id: #\", nft.id), /*#__PURE__*/React.createElement(\"img\", {\n            class: \"ipfs-image\",\n            src: `https://ipfs.infura.io/ipfs/${nft.image}`,\n            alt: \"IPFS Upload\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 29\n            }\n          }), /*#__PURE__*/React.createElement(\"p\", {\n            class: \"nft-info\",\n            id: \"desc\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 29\n            }\n          }, \"A cool Tsunami NFT\"), /*#__PURE__*/React.createElement(\"button\", {\n            class: \"purchase-disabled\",\n            disabled: true,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 29\n            }\n          }, \"Claimed\")));\n        }\n      }\n\n      return \"\";\n    })));\n  }\n\n}\n\nexport default MyNFTs;","map":{"version":3,"sources":["/Users/israeladelaja/Desktop/NFTAirdrop/client/src/MyNFTs.js"],"names":["React","Component","MyNFTs","state","componentDidMount","claimNFTBought","tokenId","props","airdropInstance","methods","send","from","account","window","location","reload","render","airdropEnd","nfts","map","nft","key","owner","toLowerCase","purpose","title","id","image","claimed"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\n\n\nclass MyNFTs extends Component {\n\n  state = { };\n\n  componentDidMount = async () => {\n  };\n\n  claimNFTBought = async (tokenId) => {\n    await this.props.airdropInstance.methods.claimNFTBought(tokenId).send({from: this.props.account});\n    window.location.reload()\n  }\n\n  render() {\n    return (\n        <div className=\"App\">\n        <h1>My NFTs</h1>\n        <p class=\"nft-info\">The NFTs bought from the sale can be claimed at: {this.props.airdropEnd}.</p>\n        <p class=\"nft-info\">The NFTs bought from Airdrop are already claimed!</p>\n        <div class=\"nfts\">\n          {this.props.nfts.map((nft, key) => {\n              if (nft.owner.toLowerCase() === this.props.account.toLowerCase()) {\n                if (nft.purpose === \"1\") {\n                    return (\n                        <div class=\"nft\">\n                          <div class=\"white-box\">\n                            <h2>{nft.title}</h2>\n                            <p class=\"nft-info\">Can claim at end of sale</p>\n                            <p class=\"nft-info\">Id: #{nft.id}</p>\n                            <img class=\"ipfs-image\" src={`https://ipfs.infura.io/ipfs/${nft.image}`} alt=\"IPFS Upload\"/>\n                            <p class=\"nft-info\" id=\"desc\">A cool Tsunami NFT</p>\n                            <p class=\"nft-info\">{nft.claimed === \"1\" ? <button class=\"purchase\" disabled>Claimed</button> : <button class=\"purchase\" onClick={() => this.claimNFTBought(nft.id)}>Claim</button>}</p>\n                          </div>\n                        </div>\n                      );\n                } else if (nft.purpose === \"0\") {\n                    return (\n                        <div class=\"nft\">\n                          <div class=\"white-box\">\n                            <h2>{nft.title}</h2>\n                            <p class=\"nft-info\">Received from Airdrop</p>\n                            <h3 class=\"nft-info\">Id: #{nft.id}</h3>\n                            <img class=\"ipfs-image\" src={`https://ipfs.infura.io/ipfs/${nft.image}`} alt=\"IPFS Upload\"/>\n                            <p class=\"nft-info\" id=\"desc\">A cool Tsunami NFT</p>\n                            <button class=\"purchase-disabled\" disabled>Claimed</button>\n                          </div>\n                        </div>\n                      );                    \n                }\n              }\n            return \"\";\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MyNFTs;\n"]},"metadata":{},"sourceType":"module"}