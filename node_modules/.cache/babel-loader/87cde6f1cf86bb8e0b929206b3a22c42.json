{"ast":null,"code":"var _jsxFileName = \"/Users/israeladelaja/Desktop/NFTAirdrop/client/src/Main.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\n\nclass Main extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n\n    this.componentDidMount = async () => {\n      this.images = [\"QmZoV3cFySq57pckUHHGvVk42VimhCvUH4tyNsUTgTEcYD\", \"QmUnbEDDCM2LqRGLdTq4KgP3QCqfAQkkrezoAMGongagLe\", \"QmWfHV3gpWsAc5arTXjvQ7NmZskqYwT2j4vCQSCWvzZFpA\"];\n    };\n\n    this.buyNft = async (tokenId, tokenPrice) => {\n      let min = Math.ceil(0);\n      let max = Math.floor(this.images.length - 1);\n      let imageIndex = Math.floor(Math.random() * (max - min) + min);\n      let randomImage = this.images[imageIndex];\n      document.querySelector('#ShowButton').innerHTML = 'Hide';\n      await this.props.airdropInstance.methods.mint(1, \"CryptoPunk#\" + this.props.nfts.length, randomImage).send({\n        from: this.props.account,\n        value: this.props.price\n      });\n      window.location.replace(\"/mynfts\");\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"Sale\"), React.createElement(\"p\", {\n      class: \"nft-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"Mint tokens from our sale! Every NFT has a price of \", this.props.price / 10 ** 18, \" ether.\"), React.createElement(\"button\", {\n      class: \"mint\",\n      onClick: () => this.buyNft(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"Mint\"), React.createElement(\"div\", {\n      class: \"nfts\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"nft\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"white-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"CryptoPunk\"), React.createElement(\"img\", {\n      class: \"ipfs-image\",\n      src: \"https://ipfs.infura.io/ipfs/QmZoV3cFySq57pckUHHGvVk42VimhCvUH4tyNsUTgTEcYD\",\n      alt: \"IPFS Upload\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      class: \"nft-info\",\n      id: \"desc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"A cool cryptopunk\"))), React.createElement(\"div\", {\n      class: \"nft\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"white-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"CryptoPunk\"), React.createElement(\"img\", {\n      class: \"ipfs-image\",\n      src: \"https://ipfs.infura.io/ipfs/QmUnbEDDCM2LqRGLdTq4KgP3QCqfAQkkrezoAMGongagLe\",\n      alt: \"IPFS Upload\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      class: \"nft-info\",\n      id: \"desc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"A cool cryptopunk\"))), React.createElement(\"div\", {\n      class: \"nft\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"white-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"CryptoPunk\"), React.createElement(\"img\", {\n      class: \"ipfs-image\",\n      src: \"https://ipfs.infura.io/ipfs/QmWfHV3gpWsAc5arTXjvQ7NmZskqYwT2j4vCQSCWvzZFpA\",\n      alt: \"IPFS Upload\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      class: \"nft-info\",\n      id: \"desc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"A cool cryptopunk\")))));\n  }\n\n}\n\nexport default Main;","map":{"version":3,"sources":["/Users/israeladelaja/Desktop/NFTAirdrop/client/src/Main.js"],"names":["React","Component","Main","state","componentDidMount","images","buyNft","tokenId","tokenPrice","min","Math","ceil","max","floor","length","imageIndex","random","randomImage","document","querySelector","innerHTML","props","airdropInstance","methods","mint","nfts","send","from","account","value","price","window","location","replace","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport \"./App.css\";\n\n\nclass Main extends Component {\n\n  state = {};\n\n\n\n  componentDidMount = async () => {\n    this.images = [\"QmZoV3cFySq57pckUHHGvVk42VimhCvUH4tyNsUTgTEcYD\", \n              \"QmUnbEDDCM2LqRGLdTq4KgP3QCqfAQkkrezoAMGongagLe\", \n              \"QmWfHV3gpWsAc5arTXjvQ7NmZskqYwT2j4vCQSCWvzZFpA\"]\n  };\n\n  buyNft = async (tokenId, tokenPrice) => {\n    let min = Math.ceil(0);\n    let max = Math.floor(this.images.length-1);\n    let imageIndex = Math.floor(Math.random() * (max - min) + min);\n    let randomImage = this.images[imageIndex]\n    document.querySelector('#ShowButton').innerHTML = 'Hide';\n    await this.props.airdropInstance.methods.mint(1, \"CryptoPunk#\"+this.props.nfts.length, randomImage).send({from: this.props.account, value: this.props.price});\n    window.location.replace(\"/mynfts\")\n  }\n\n  render() {\n      return (\n        <div className=\"App\">\n          <h1>Sale</h1>\n          <p class=\"nft-info\">Mint tokens from our sale! Every NFT has a price of {this.props.price/10**18} ether.</p>\n          <button class=\"mint\" onClick={() => this.buyNft()}>Mint</button>\n          <div class=\"nfts\">\n                <div class=\"nft\">\n                  <div class=\"white-box\">\n                    <h2>CryptoPunk</h2>\n                    <img class=\"ipfs-image\" src={`https://ipfs.infura.io/ipfs/QmZoV3cFySq57pckUHHGvVk42VimhCvUH4tyNsUTgTEcYD`} alt=\"IPFS Upload\"/>\n                    <p class=\"nft-info\" id=\"desc\">A cool cryptopunk</p>\n\n                  </div>\n                </div>\n                <div class=\"nft\">\n                    <div class=\"white-box\">\n                      <h2>CryptoPunk</h2>\n                      <img class=\"ipfs-image\" src={`https://ipfs.infura.io/ipfs/QmUnbEDDCM2LqRGLdTq4KgP3QCqfAQkkrezoAMGongagLe`} alt=\"IPFS Upload\"/>\n                      <p class=\"nft-info\" id=\"desc\">A cool cryptopunk</p>\n                    </div>\n                  </div>\n                  <div class=\"nft\">\n                    <div class=\"white-box\">\n                      <h2>CryptoPunk</h2>\n                      <img class=\"ipfs-image\" src={`https://ipfs.infura.io/ipfs/QmWfHV3gpWsAc5arTXjvQ7NmZskqYwT2j4vCQSCWvzZFpA`} alt=\"IPFS Upload\"/>\n                      <p class=\"nft-info\" id=\"desc\">A cool cryptopunk</p>\n                    </div>\n                  </div>\n          </div>\n        </div>\n      );\n  }\n}\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}