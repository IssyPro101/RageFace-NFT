{"ast":null,"code":"var _jsxFileName = \"/Users/israeladelaja/Desktop/Product DApp/client/src/Main.js\";\nimport React, { Component } from \"react\";\nimport ProductBuyContract from \"./contracts/ProductBuy.json\";\nimport TestToken from \"./contracts/TestToken.json\";\nimport getWeb3 from \"./getWeb3\";\nimport Navbar from \"./Navbar.js\";\nimport \"./App.css\";\n\nconst BigNumber = require('bignumber.js');\n\nclass Main extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      products: null,\n      web3: null,\n      account: null,\n      contract: null,\n      token: null,\n      tokenName: null,\n      approved: false,\n      product: null,\n      statuses: null,\n      decimals: null\n    };\n\n    this.componentDidMount = async () => {\n      try {\n        // Get network provider and web3 instance.\n        const web3 = await getWeb3(); // Use web3 to get the user's accounts.\n\n        const account = await window.ethereum.request({\n          method: 'eth_accounts'\n        });\n        console.log(account[0]); // Get the contract instance.\n\n        const networkId = await web3.eth.net.getId();\n        const deployedNetworkProduct = ProductBuyContract.networks[networkId];\n        const instance = new web3.eth.Contract(ProductBuyContract.abi, deployedNetworkProduct && deployedNetworkProduct.address);\n        let tokenAddress = await instance.methods.token().call();\n        const deployedNetworkToken = TestToken.networks[networkId];\n        const token = new web3.eth.Contract(TestToken.abi, deployedNetworkToken && tokenAddress);\n        let product = deployedNetworkProduct.address;\n        let products = await instance.methods.viewProducts().call();\n        let tokenName = await token.methods.name().call();\n        let tokenSymbol = await token.methods.symbol().call();\n        let decimals = await token.methods.decimals().call();\n        let statuses = await instance.methods.getProductStatuses().call();\n        console.log(statuses); // Set web3, accounts, and contract to the state, and then proceed with an\n        // example of interacting with the contract's methods.\n\n        this.setState({\n          web3,\n          account: account[0],\n          contract: instance,\n          products,\n          token,\n          tokenName,\n          tokenSymbol,\n          product,\n          statuses,\n          decimals\n        });\n      } catch (error) {\n        // Catch any errors for any of the above operations.\n        alert(\"Failed to load web3, accounts, or contract. Check console for details.\");\n        console.error(error);\n      }\n    };\n\n    this.handleApprove = async price => {\n      let receipt = await this.state.token.methods.approve(this.state.product, bnPrice).send({\n        from: this.state.account\n      });\n      console.log(receipt);\n      this.setState({\n        approved: true\n      });\n    };\n\n    this.handleBuy = async id => {\n      await this.state.contract.methods.buyProduct(id).send({\n        from: this.state.account\n      });\n      await this.getProductStatuses();\n    };\n\n    this.getProductStatuses = async () => {\n      let statuses = await this.state.contract.methods.getProductStatuses().call();\n      this.setState({\n        statuses\n      });\n    };\n  }\n\n  render() {\n    let content;\n\n    if (!this.state.web3) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Loading Web3, accounts, and contracts...\");\n    } else if (this.state.products.length === 0) {\n      content = React.createElement(\"h3\", {\n        id: \"no-products\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"No products have been listed yet.\");\n    } else {\n      content = this.state.products.map((product, key) => {\n        let status = this.state.statuses[key];\n        return React.createElement(\"div\", {\n          className: \"product\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }, product.productName), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }, \"Price: \", product.productPrice / 10 ** this.state.decimals, \" \", this.state.tokenSymbol), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }, \"Id: \", product.productId), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }, \"Seller: \", product.productSeller), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }, \"Status: \", status == 1 ? \"Sold\" : \"Unsold\"), status == 0 ? !this.state.approved ? React.createElement(\"button\", {\n          onClick: () => this.handleApprove(product.productPrice),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, \"Approve Contract\") : React.createElement(\"button\", {\n          onClick: () => this.handleBuy(product.productId),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, \"Buy\") : React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }));\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      account: this.state.account,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Product Marketplace\"), React.createElement(\"div\", {\n      id: \"products\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, content));\n  }\n\n}\n\nexport default Main;","map":{"version":3,"sources":["/Users/israeladelaja/Desktop/Product DApp/client/src/Main.js"],"names":["React","Component","ProductBuyContract","TestToken","getWeb3","Navbar","BigNumber","require","Main","state","products","web3","account","contract","token","tokenName","approved","product","statuses","decimals","componentDidMount","window","ethereum","request","method","console","log","networkId","eth","net","getId","deployedNetworkProduct","networks","instance","Contract","abi","address","tokenAddress","methods","call","deployedNetworkToken","viewProducts","name","tokenSymbol","symbol","getProductStatuses","setState","error","alert","handleApprove","price","receipt","approve","bnPrice","send","from","handleBuy","id","buyProduct","render","content","length","map","key","status","productName","productPrice","productId","productSeller"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport ProductBuyContract from \"./contracts/ProductBuy.json\";\nimport TestToken from \"./contracts/TestToken.json\";\nimport getWeb3 from \"./getWeb3\";\nimport Navbar from \"./Navbar.js\";\n\nimport \"./App.css\";\n\nconst BigNumber = require('bignumber.js');\n\n\nclass Main extends Component {\n\n  state = { products: null, web3: null, account: null, contract: null, token: null, tokenName: null, approved: false, product: null, statuses: null, decimals: null };\n\n  componentDidMount = async () => {\n    try {\n      // Get network provider and web3 instance.\n      const web3 = await getWeb3();\n\n      // Use web3 to get the user's accounts.\n      const account = await window.ethereum.request({ method: 'eth_accounts' });\n      console.log(account[0])\n\n      // Get the contract instance.\n      const networkId = await web3.eth.net.getId();\n      const deployedNetworkProduct = ProductBuyContract.networks[networkId];\n      const instance = new web3.eth.Contract(\n        ProductBuyContract.abi,\n        deployedNetworkProduct && deployedNetworkProduct.address,\n      );\n\n      let tokenAddress = await instance.methods.token().call();\n\n      const deployedNetworkToken = TestToken.networks[networkId];\n      const token = new web3.eth.Contract(\n        TestToken.abi,\n        deployedNetworkToken && tokenAddress,\n      );\n\n      let product = deployedNetworkProduct.address;\n\n      let products = await instance.methods.viewProducts().call();\n\n      let tokenName = await token.methods.name().call();\n\n      let tokenSymbol = await token.methods.symbol().call();\n\n      let decimals = await token.methods.decimals().call();\n\n      let statuses = await instance.methods.getProductStatuses().call();\n      console.log(statuses)\n\n      // Set web3, accounts, and contract to the state, and then proceed with an\n      // example of interacting with the contract's methods.\n      this.setState({ web3, account: account[0], contract: instance, products, token,tokenName, tokenSymbol, product, statuses, decimals });\n\n    } catch (error) {\n      // Catch any errors for any of the above operations.\n      alert(\n        `Failed to load web3, accounts, or contract. Check console for details.`,\n      );\n      console.error(error);\n    }\n  };\n\n  handleApprove = async (price) => {\n    let receipt = await this.state.token.methods.approve(this.state.product, bnPrice).send({from: this.state.account});\n    console.log(receipt)\n    this.setState({approved: true})\n  }\n\n  handleBuy = async (id) => {\n    await this.state.contract.methods.buyProduct(id).send({from: this.state.account});\n    await this.getProductStatuses();\n  }\n\n  getProductStatuses = async () => {\n    let statuses = await this.state.contract.methods.getProductStatuses().call();\n    this.setState({statuses});\n  }\n  \n  render() {\n    let content;\n    if (!this.state.web3) {\n      return <div>Loading Web3, accounts, and contracts...</div>;\n    } else if (this.state.products.length === 0) {\n      content = <h3 id=\"no-products\">No products have been listed yet.</h3>\n    } else {\n      content = this.state.products.map((product, key) => {\n        let status = this.state.statuses[key]\n        return ( \n          <div className=\"product\">\n            <h2>{product.productName}</h2>\n            <p>Price: {product.productPrice/10**this.state.decimals} {this.state.tokenSymbol}</p>\n            <p>Id: {product.productId}</p>\n            <p>Seller: {product.productSeller}</p>\n            <p>Status: {status == 1 ? \"Sold\" : \"Unsold\"}</p>\n            {status == 0 ? !this.state.approved ? <button onClick={() => this.handleApprove(product.productPrice)}>Approve Contract</button> : <button onClick={() => this.handleBuy(product.productId)}>Buy</button> : <p></p>}\n          </div>\n        )    \n      })\n    }\n    return (\n      <div className=\"App\">\n        <Navbar account={this.state.account}/>\n        <h1>Product Marketplace</h1>\n        <div id=\"products\">\n          {content}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}