{"ast":null,"code":"var _jsxFileName = \"/Users/israeladelaja/Desktop/NFTAirdrop/client/src/MyNFTs.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\n\nclass MyNFTs extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n\n    this.componentDidMount = async () => {};\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, \"My NFTs\"), React.createElement(\"div\", {\n      class: \"nfts\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, this.props.nfts.map((nft, key) => {\n      if (nft.owner.toLowerCase() == this.props.account.toLowerCase()) {\n        return React.createElement(\"div\", {\n          class: \"nft\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        }, React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        }, nft.title), React.createElement(\"p\", {\n          id: \"nft-info\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        }, \"Id: \", nft.id), React.createElement(\"img\", {\n          id: \"ipfs-image\",\n          src: \"https://ipfs.infura.io/ipfs/\".concat(nft.image),\n          alt: \"IPFS Upload\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        }), React.createElement(\"p\", {\n          id: \"nft-info\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        }, nft.description), React.createElement(\"p\", {\n          id: \"nft-info\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        }, \"Price: \", nft.price), React.createElement(\"p\", {\n          id: \"nft-info\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        }, \"Status: \", nft.status), React.createElement(\"p\", {\n          id: \"nft-info\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }, nft.claimed == 1 ? \"Claimed\" : React.createElement(\"button\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }, \"Claim\")));\n      }\n    })));\n  }\n\n}\n\nexport default MyNFTs;","map":{"version":3,"sources":["/Users/israeladelaja/Desktop/NFTAirdrop/client/src/MyNFTs.js"],"names":["React","Component","MyNFTs","state","componentDidMount","render","props","nfts","map","nft","key","owner","toLowerCase","account","title","id","image","description","price","status","claimed"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;;AAGA,MAAMC,MAAN,SAAqBD,SAArB,CAA+B;AAAA;AAAA;AAAA,SAE7BE,KAF6B,GAErB,EAFqB;;AAAA,SAI7BC,iBAJ6B,GAIT,YAAY,CAC/B,CAL4B;AAAA;;AAS7BC,EAAAA,MAAM,GAAG;AACP,WACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADA,EAEA;AAAK,MAAA,KAAK,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKC,KAAL,CAAWC,IAAX,CAAgBC,GAAhB,CAAoB,CAACC,GAAD,EAAMC,GAAN,KAAc;AAC/B,UAAID,GAAG,CAACE,KAAJ,CAAUC,WAAV,MAA2B,KAAKN,KAAL,CAAWO,OAAX,CAAmBD,WAAnB,EAA/B,EAAiE;AAC/D,eACI;AAAK,UAAA,KAAK,EAAC,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKH,GAAG,CAACK,KAAT,CADF,EAEE;AAAG,UAAA,EAAE,EAAC,UAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAsBL,GAAG,CAACM,EAA1B,CAFF,EAGE;AAAK,UAAA,EAAE,EAAC,YAAR;AAAqB,UAAA,GAAG,wCAAiCN,GAAG,CAACO,KAArC,CAAxB;AAAsE,UAAA,GAAG,EAAC,aAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHF,EAIE;AAAG,UAAA,EAAE,EAAC,UAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAkBP,GAAG,CAACQ,WAAtB,CAJF,EAKE;AAAG,UAAA,EAAE,EAAC,UAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAyBR,GAAG,CAACS,KAA7B,CALF,EAME;AAAG,UAAA,EAAE,EAAC,UAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAA0BT,GAAG,CAACU,MAA9B,CANF,EAOE;AAAG,UAAA,EAAE,EAAC,UAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAkBV,GAAG,CAACW,OAAJ,IAAe,CAAf,GAAmB,SAAnB,GAA+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAjD,CAPF,CADJ;AAWD;AACJ,KAdA,CADH,CAFA,CADJ;AAsBD;;AAhC4B;;AAmC/B,eAAelB,MAAf","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\n\n\nclass MyNFTs extends Component {\n\n  state = {  };\n\n  componentDidMount = async () => {\n  };\n\n\n\n  render() {\n    return (\n        <div className=\"App\">\n        <h1>My NFTs</h1>\n        <div class=\"nfts\">\n          {this.props.nfts.map((nft, key) => {\n              if (nft.owner.toLowerCase() == this.props.account.toLowerCase()) {\n                return (\n                    <div class=\"nft\">\n                      <h2>{nft.title}</h2>\n                      <p id=\"nft-info\">Id: {nft.id}</p>\n                      <img id=\"ipfs-image\" src={`https://ipfs.infura.io/ipfs/${nft.image}`} alt=\"IPFS Upload\"/>\n                      <p id=\"nft-info\">{nft.description}</p>\n                      <p id=\"nft-info\">Price: {nft.price}</p>\n                      <p id=\"nft-info\">Status: {nft.status}</p>\n                      <p id=\"nft-info\">{nft.claimed == 1 ? \"Claimed\" : <button>Claim</button>}</p>\n                    </div>\n                  );\n              }\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MyNFTs;\n"]},"metadata":{},"sourceType":"module"}