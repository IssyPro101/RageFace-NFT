{"ast":null,"code":"var _jsxFileName = \"/Users/israeladelaja/Desktop/Product DApp/client/src/ListProducts.js\";\nimport React, { Component } from 'react';\nimport ProductBuyContract from \"./contracts/ProductBuy.json\";\nimport TestToken from \"./contracts/TestToken.json\";\nimport getWeb3 from \"./getWeb3\";\nimport \"./App.css\";\n\nconst ipfsClient = require('ipfs-http-client');\n\nconst ipfs = ipfsClient({\n  host: 'ipfs.infura.io',\n  port: 5001,\n  protocol: 'https'\n}); // leaving out the arguments will default to these values\n\nclass ListProducts extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: false,\n      products: [],\n      web3: null,\n      account: \"\",\n      contract: null,\n      token: null,\n      tokenName: null,\n      approved: false,\n      product: null,\n      statuses: null,\n      taxTolerance: null,\n      priceWithTax: \"0\",\n      decimals: null\n    };\n\n    this.componentDidMount = async () => {\n      try {\n        // Get network provider and web3 instance.\n        const web3 = await getWeb3();\n        const account = await window.ethereum.request({\n          method: 'eth_accounts'\n        });\n        console.log(account[0]); // Get the contract instance.\n\n        const networkId = await web3.eth.net.getId();\n        const deployedNetworkProduct = ProductBuyContract.networks[networkId];\n        const instance = new web3.eth.Contract(ProductBuyContract.abi, deployedNetworkProduct && deployedNetworkProduct.address);\n        let tokenAddress = await instance.methods.token().call();\n        const deployedNetworkToken = TestToken.networks[networkId];\n        const token = new web3.eth.Contract(TestToken.abi, deployedNetworkToken && tokenAddress);\n        let product = deployedNetworkProduct.address;\n        let products = await instance.methods.viewProducts().call();\n        let tokenName = await token.methods.name().call();\n        let tokenSymbol = await token.methods.symbol().call();\n        let taxTolerance = await instance.methods.taxTolerance().call();\n        let decimals = await token.methods.decimals().call(); // Set web3, accounts, and contract to the state, and then proceed with an\n        // example of interacting with the contract's methods.\n\n        this.setState({\n          web3,\n          account: account[0],\n          contract: instance,\n          products,\n          token,\n          tokenName,\n          tokenSymbol,\n          product,\n          taxTolerance,\n          decimals\n        });\n      } catch (error) {\n        // Catch any errors for any of the above operations.\n        alert(\"Failed to load web3, accounts, or contract. Check console for details.\");\n        console.error(error);\n      }\n    };\n\n    this.captureFile = event => {\n      event.preventDefault();\n      const file = event.target.files[0];\n      var image = document.getElementById('output');\n      image.src = URL.createObjectURL(file);\n      const fileName = file.name;\n      const fileExtension = file.type;\n      this.setState({\n        fileName\n      });\n      this.setState({\n        fileExtension\n      });\n      const reader = new window.FileReader();\n      reader.readAsArrayBuffer(file);\n\n      reader.onloadend = () => {\n        this.setState({\n          buffer: Buffer(reader.result)\n        });\n        console.log('buffer', this.state.buffer);\n      };\n    };\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      let name = document.getElementsByName(\"field1\")[0].value;\n      let link = document.getElementsByName(\"field2\")[0].value;\n      let price = document.getElementsByName(\"field3\")[0].value; // Decimal\n\n      const decimals = this.state.web3.utils.toBN(this.state.decimals); // Amount of token\n\n      const tokenAmount = this.state.web3.utils.toBN(price); // Amount as Hex - contract.methods.transfer(toAddress, tokenAmountHex).encodeABI();\n\n      const tokenAmountHex = '0x' + tokenAmount.mul(this.state.web3.utils.toBN(10).pow(decimals)).toString('hex');\n      this.setState({\n        loading: true\n      }); // await ipfs.add(this.state.buffer, async (error, result) => {\n      //   if(error) {\n      //     console.error(error)\n      //     return\n      //   }\n      //   await this.state.contract.methods.listProduct(name, link, tokenAmountHex, result[0].hash).send({from: this.state.account})\n      // })\n\n      this.setState({\n        loading: false\n      }); // await window.location.reload();\n    };\n\n    this.handlePrice = async event => {\n      if (this.state.taxTolerance !== \"0\") {\n        let priceWithTax = document.getElementsByName(\"field3\")[0].value * (100 - this.state.taxTolerance) / 100;\n        this.setState({\n          priceWithTax\n        });\n      } else {\n        this.setState({\n          priceWithTax: document.getElementsByName(\"field3\")[0].value\n        });\n      }\n    };\n  }\n\n  render() {\n    let content;\n    let status;\n\n    if (!this.state.web3) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, \"Loading Web3, accounts, and contracts...\");\n    } else if (this.state.loading) {\n      status = React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"Uploading Product...\");\n      content = this.state.products.map((product, key) => {\n        return React.createElement(\"div\", {\n          className: \"product\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          },\n          __self: this\n        }, React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136\n          },\n          __self: this\n        }, product.productName), React.createElement(\"img\", {\n          class: \"productImage\",\n          src: product.productImage,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137\n          },\n          __self: this\n        }), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138\n          },\n          __self: this\n        }, \"Price: \", product.productPrice / 10 ** this.state.decimals, \" \", this.state.tokenSymbol), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139\n          },\n          __self: this\n        }, \"Id: \", product.productId), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140\n          },\n          __self: this\n        }, \"Seller: You\"), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141\n          },\n          __self: this\n        }, \"Status: \", status === \"1\" ? \"Sold\" : \"Unsold\"));\n      });\n    } else if (!this.state.loading) {\n      status = React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, \"Product Details\");\n      content = this.state.products.map((product, key) => {\n        return React.createElement(\"div\", {\n          className: \"product\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150\n          },\n          __self: this\n        }, React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151\n          },\n          __self: this\n        }, product.productName), React.createElement(\"img\", {\n          class: \"productImage\",\n          src: product.productImage,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152\n          },\n          __self: this\n        }), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153\n          },\n          __self: this\n        }, \"Price: \", product.productPrice / 10 ** this.state.decimals, \" \", this.state.tokenSymbol), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154\n          },\n          __self: this\n        }, \"Id: \", product.productId), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155\n          },\n          __self: this\n        }, \"Seller: You\"), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156\n          },\n          __self: this\n        }, \"Status: \", status === \"1\" ? \"Sold\" : \"Unsold\"));\n      });\n    } else if (this.state.products.length === \"0\") {\n      content = React.createElement(\"h3\", {\n        id: \"no-products\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, \"You haven't listed any products.\");\n    } else {\n      content = this.state.products.map((product, key) => {\n        return React.createElement(\"div\", {\n          className: \"product\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166\n          },\n          __self: this\n        }, React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167\n          },\n          __self: this\n        }, product.productName), React.createElement(\"img\", {\n          class: \"productImage\",\n          src: product.productImage,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168\n          },\n          __self: this\n        }), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 169\n          },\n          __self: this\n        }, \"Price: \", product.productPrice / 10 ** this.state.decimals, \" \", this.state.tokenSymbol), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170\n          },\n          __self: this\n        }, \"Id: \", product.productId), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171\n          },\n          __self: this\n        }, \"Seller: You\"), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172\n          },\n          __self: this\n        }, \"Status: \", status === \"1\" ? \"Sold\" : \"Unsold\"));\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, \"List a Product\"), React.createElement(\"div\", {\n      class: \"form-style-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, status, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"field1\",\n      placeholder: \"Product Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"field2\",\n      placeholder: \"Product Link (make sure link is http or https)\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      onChange: this.handlePrice,\n      type: \"text\",\n      name: \"field3\",\n      placeholder: \"Product Price in \" + this.state.tokenName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, \"Upload a picture:\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      id: \"output\",\n      width: \"200\",\n      alt: \"Upload\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      type: \"file\",\n      accept: \"image/*\",\n      name: \"image\",\n      id: \"file\",\n      onChange: this.captureFile,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      id: \"receive\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, \"You will receive \", this.state.priceWithTax, \" \", this.state.tokenSymbol, \" (\", this.state.taxTolerance + \"% tax on \" + this.state.tokenName + \" transfer\", \")\"), React.createElement(\"input\", {\n      id: \"submit\",\n      type: \"submit\",\n      value: \"List\",\n      onClick: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }))), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, \"My Listed Products\"), React.createElement(\"div\", {\n      id: \"products\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, content));\n  }\n\n}\n\nexport default ListProducts;","map":{"version":3,"sources":["/Users/israeladelaja/Desktop/Product DApp/client/src/ListProducts.js"],"names":["React","Component","ProductBuyContract","TestToken","getWeb3","ipfsClient","require","ipfs","host","port","protocol","ListProducts","state","loading","products","web3","account","contract","token","tokenName","approved","product","statuses","taxTolerance","priceWithTax","decimals","componentDidMount","window","ethereum","request","method","console","log","networkId","eth","net","getId","deployedNetworkProduct","networks","instance","Contract","abi","address","tokenAddress","methods","call","deployedNetworkToken","viewProducts","name","tokenSymbol","symbol","setState","error","alert","captureFile","event","preventDefault","file","target","files","image","document","getElementById","src","URL","createObjectURL","fileName","fileExtension","type","reader","FileReader","readAsArrayBuffer","onloadend","buffer","Buffer","result","handleSubmit","getElementsByName","value","link","price","utils","toBN","tokenAmount","tokenAmountHex","mul","pow","toString","handlePrice","render","content","status","map","key","productName","productImage","productPrice","productId","length"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport ProductBuyContract from \"./contracts/ProductBuy.json\";\nimport TestToken from \"./contracts/TestToken.json\";\nimport getWeb3 from \"./getWeb3\";\nimport \"./App.css\";\n\nconst ipfsClient = require('ipfs-http-client')\nconst ipfs = ipfsClient({ host: 'ipfs.infura.io', port: 5001, protocol: 'https' }) // leaving out the arguments will default to these values\n\nclass ListProducts extends Component {\n\n    state = { loading: false, products: [], web3: null, account: \"\", contract: null, token: null, tokenName: null, approved: false, product: null, statuses: null, taxTolerance: null, priceWithTax: \"0\", decimals: null }\n\n    componentDidMount = async () => {\n        try {\n          // Get network provider and web3 instance.\n            const web3 = await getWeb3();\n\n            const account = await window.ethereum.request({ method: 'eth_accounts' });\n            console.log(account[0])\n\n            // Get the contract instance.\n            const networkId = await web3.eth.net.getId();\n            const deployedNetworkProduct = ProductBuyContract.networks[networkId];\n            const instance = new web3.eth.Contract(\n                ProductBuyContract.abi,\n                deployedNetworkProduct && deployedNetworkProduct.address,\n            );\n\n            let tokenAddress = await instance.methods.token().call();\n\n            const deployedNetworkToken = TestToken.networks[networkId];\n            const token = new web3.eth.Contract(\n                TestToken.abi,\n                deployedNetworkToken && tokenAddress,\n            );\n\n            let product = deployedNetworkProduct.address;\n\n            let products = await instance.methods.viewProducts().call();\n\n            let tokenName = await token.methods.name().call();\n\n            let tokenSymbol = await token.methods.symbol().call();\n\n            let taxTolerance = await instance.methods.taxTolerance().call();\n\n            let decimals = await token.methods.decimals().call();\n\n\n          // Set web3, accounts, and contract to the state, and then proceed with an\n          // example of interacting with the contract's methods.\n          this.setState({web3, account: account[0], contract: instance, products, token, tokenName, tokenSymbol, product, taxTolerance, decimals});\n    \n        } catch (error) {\n          // Catch any errors for any of the above operations.\n          alert(\n            `Failed to load web3, accounts, or contract. Check console for details.`,\n          );\n          console.error(error);\n        }\n    };\n\n    captureFile = (event) => {\n      event.preventDefault()\n  \n      const file = event.target.files[0]\n      var image = document.getElementById('output');\n      image.src = URL.createObjectURL(file);\n      const fileName = file.name\n      const fileExtension = file.type\n      this.setState({fileName})\n      this.setState({fileExtension})\n      const reader = new window.FileReader()\n      reader.readAsArrayBuffer(file)\n      reader.onloadend = () => {\n        this.setState({ buffer: Buffer(reader.result) })\n        console.log('buffer', this.state.buffer)\n      }\n    }\n  \n\n    handleSubmit = async (event) => {\n        event.preventDefault();\n\n        let name = document.getElementsByName(\"field1\")[0].value;\n        let link = document.getElementsByName(\"field2\")[0].value;\n        let price = document.getElementsByName(\"field3\")[0].value;\n\n        // Decimal\n        const decimals = this.state.web3.utils.toBN(this.state.decimals);\n\n        // Amount of token\n        const tokenAmount = this.state.web3.utils.toBN(price);\n\n        // Amount as Hex - contract.methods.transfer(toAddress, tokenAmountHex).encodeABI();\n        const tokenAmountHex = '0x' + tokenAmount.mul(this.state.web3.utils.toBN(10).pow(decimals)).toString('hex');\n\n        this.setState({loading: true})\n\n        // await ipfs.add(this.state.buffer, async (error, result) => {\n        //   if(error) {\n        //     console.error(error)\n        //     return\n        //   }\n        //   await this.state.contract.methods.listProduct(name, link, tokenAmountHex, result[0].hash).send({from: this.state.account})\n        // })\n\n        this.setState({loading: false})\n\n        // await window.location.reload();\n\n    }\n\n    handlePrice = async (event) => {\n        if (this.state.taxTolerance !== \"0\") {\n            let priceWithTax = document.getElementsByName(\"field3\")[0].value * (100 - this.state.taxTolerance) / 100;\n            this.setState({priceWithTax})\n        } else {\n            this.setState({priceWithTax: document.getElementsByName(\"field3\")[0].value})\n        }\n\n    }\n\n\n  render() {\n    let content;\n    let status;\n    if (!this.state.web3) {\n      return <div>Loading Web3, accounts, and contracts...</div>;\n    } else if (this.state.loading) {\n      status = <h1>Uploading Product...</h1>\n      content = this.state.products.map((product, key) => {\n        return ( \n            <div className=\"product\">\n              <h2>{product.productName}</h2>\n              <img class=\"productImage\" src={product.productImage}/>\n              <p>Price: {product.productPrice/10**this.state.decimals} {this.state.tokenSymbol}</p>\n              <p>Id: {product.productId}</p>\n              <p>Seller: You</p>\n              <p>Status: {status === \"1\" ? \"Sold\" : \"Unsold\"}</p>\n            </div>\n        )    \n\n      })\n    } else if (!this.state.loading) {\n      status = <h1>Product Details</h1>\n      content = this.state.products.map((product, key) => {\n        return ( \n            <div className=\"product\">\n              <h2>{product.productName}</h2>\n              <img class=\"productImage\" src={product.productImage}/>\n              <p>Price: {product.productPrice/10**this.state.decimals} {this.state.tokenSymbol}</p>\n              <p>Id: {product.productId}</p>\n              <p>Seller: You</p>\n              <p>Status: {status === \"1\" ? \"Sold\" : \"Unsold\"}</p>\n            </div>\n        )    \n\n      })\n    } else if (this.state.products.length === \"0\") {\n      content = <h3 id=\"no-products\">You haven't listed any products.</h3>\n    } else {\n      content = this.state.products.map((product, key) => {\n        return ( \n            <div className=\"product\">\n              <h2>{product.productName}</h2>\n              <img class=\"productImage\" src={product.productImage}/>\n              <p>Price: {product.productPrice/10**this.state.decimals} {this.state.tokenSymbol}</p>\n              <p>Id: {product.productId}</p>\n              <p>Seller: You</p>\n              <p>Status: {status === \"1\" ? \"Sold\" : \"Unsold\"}</p>\n            </div>\n        )    \n\n      })\n    }\n    return (\n        <div className=\"App\">\n            <h1>List a Product</h1>\n            <div class=\"form-style-6\">\n              {status}\n                <form>\n                    <input type=\"text\" name=\"field1\" placeholder=\"Product Name\" />\n                    <input type=\"text\" name=\"field2\" placeholder=\"Product Link (make sure link is http or https)\" />\n                    <input onChange={this.handlePrice} type=\"text\" name=\"field3\" placeholder={\"Product Price in \" + this.state.tokenName}></input>\n                    <p>Upload a picture:</p>\n                    <p><img id=\"output\" width=\"200\" alt=\"Upload\"/></p>\n                    <input type='file' accept=\"image/*\" name=\"image\" id=\"file\" onChange={this.captureFile}/>\n                    <p id=\"receive\">You will receive {this.state.priceWithTax} {this.state.tokenSymbol} ({this.state.taxTolerance + \"% tax on \" + this.state.tokenName + \" transfer\"})</p>\n                    <input id=\"submit\" type=\"submit\" value=\"List\" onClick={this.handleSubmit} />\n                </form>\n            </div>\n            <h1>My Listed Products</h1>\n            <div id=\"products\">\n              {content}\n            </div>\n        </div>\n    );\n  }\n}\n\nexport default ListProducts;\n"]},"metadata":{},"sourceType":"module"}