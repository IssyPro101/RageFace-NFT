{"ast":null,"code":"'use strict';\n\nconst addAll = require('./add-all');\n\nconst last = require('it-last');\n\nconst configure = require('../lib/configure');\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pin').API<HTTPClientExtraOptions>} PinAPI\n */\n\n/**\n * @param {import('../types').Options} config\n */\n\n\nmodule.exports = config => {\n  const all = addAll(config);\n  return configure(() => {\n    /**\n     * @type {PinAPI[\"add\"]}\n     */\n    async function add(path, options = {}) {\n      // @ts-ignore last can return undefined\n      return last(all([{\n        path,\n        ...options\n      }], options));\n    }\n\n    return add;\n  })(config);\n};","map":null,"metadata":{},"sourceType":"script"}