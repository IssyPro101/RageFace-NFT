{"ast":null,"code":"var _jsxFileName = \"/Users/israeladelaja/Desktop/Product DApp/client/src/ListProducts.js\";\nimport React, { Component } from 'react';\nimport Navbar from \"./Navbar.js\";\nimport getWeb3 from \"./getWeb3\";\n\nclass ListProducts extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.componentDidMount = async () => {\n      try {\n        // Get network provider and web3 instance.\n        const web3 = await getWeb3();\n        const account = await window.ethereum.request({\n          method: 'eth_accounts'\n        }); // Set web3, accounts, and contract to the state, and then proceed with an\n        // example of interacting with the contract's methods.\n\n        this.setState({\n          web3,\n          account: account[0]\n        });\n      } catch (error) {\n        // Catch any errors for any of the above operations.\n        alert(\"Failed to load web3, accounts, or contract. Check console for details.\");\n        console.error(error);\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"listProducts\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      account: this.state.account,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default ListProducts;","map":{"version":3,"sources":["/Users/israeladelaja/Desktop/Product DApp/client/src/ListProducts.js"],"names":["React","Component","Navbar","getWeb3","ListProducts","componentDidMount","web3","account","window","ethereum","request","method","setState","error","alert","console","render","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,MAAMC,YAAN,SAA2BH,SAA3B,CAAqC;AAAA;AAAA;;AAAA,SAEjCI,iBAFiC,GAEb,YAAY;AAC5B,UAAI;AACF;AACA,cAAMC,IAAI,GAAG,MAAMH,OAAO,EAA1B;AAEA,cAAMI,OAAO,GAAG,MAAMC,MAAM,CAACC,QAAP,CAAgBC,OAAhB,CAAwB;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAAxB,CAAtB,CAJE,CAMF;AACA;;AACA,aAAKC,QAAL,CAAc;AAAEN,UAAAA,IAAF;AAAQC,UAAAA,OAAO,EAAEA,OAAO,CAAC,CAAD;AAAxB,SAAd;AAED,OAVD,CAUE,OAAOM,KAAP,EAAc;AACd;AACAC,QAAAA,KAAK,0EAAL;AAGAC,QAAAA,OAAO,CAACF,KAAR,CAAcA,KAAd;AACD;AACJ,KApBgC;AAAA;;AAuBnCG,EAAAA,MAAM,GAAG;AACP,WACI;AAAK,MAAA,EAAE,EAAC,cAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKC,KAAL,CAAWV,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAKD;;AA7BkC;;AAgCrC,eAAeH,YAAf","sourcesContent":["import React, { Component } from 'react'\nimport Navbar from \"./Navbar.js\";\nimport getWeb3 from \"./getWeb3\";\n\nclass ListProducts extends Component {\n\n    componentDidMount = async () => {\n        try {\n          // Get network provider and web3 instance.\n          const web3 = await getWeb3();\n\n          const account = await window.ethereum.request({ method: 'eth_accounts' });\n\n          // Set web3, accounts, and contract to the state, and then proceed with an\n          // example of interacting with the contract's methods.\n          this.setState({ web3, account: account[0] });\n    \n        } catch (error) {\n          // Catch any errors for any of the above operations.\n          alert(\n            `Failed to load web3, accounts, or contract. Check console for details.`,\n          );\n          console.error(error);\n        }\n    };    \n\n\n  render() {\n    return (\n        <div id=\"listProducts\">\n            <Navbar account={this.state.account}/>\n        </div>\n    );\n  }\n}\n\nexport default ListProducts;\n"]},"metadata":{},"sourceType":"module"}